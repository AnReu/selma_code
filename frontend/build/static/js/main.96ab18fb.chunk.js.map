{"version":3,"sources":["app/services/index.ts","app/services/templates.ts","app/hooks.ts","features/snackbar/snackbarSlice.ts","features/search/searchSlice.ts","features/templates/TemplateListItem.tsx","features/templates/TemplateList.tsx","features/templates/TemplateListDialog.tsx","app/services/languages.ts","app/services/models.ts","app/services/databases.ts","features/Markdown.tsx","features/templates/TemplateCreateDialog.tsx","features/search/DefaultSearchBar.tsx","features/search/SeparatedSearchBar.tsx","features/search/URLSearchBar.tsx","features/search/FileUploadSearchBar.tsx","app/services/configs.ts","features/navbar/NavbarWithTabs.tsx","features/CodeMarkdown.tsx","app/services/relevances.ts","features/search/SearchResultDialog.tsx","features/search/SearchResult.tsx","app/services/results.ts","features/search/SearchResults.tsx","features/search/SearchPage.tsx","features/AboutPage.tsx","features/snackbar/StoreSnackbar.tsx","features/user/ConfigsPage.tsx","App.tsx","app/store.ts","serviceWorker.ts","index.tsx"],"names":["emptySplitApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","splitApi","emptyTemplate","name","text","code","equation","mode","model","language","url","user","database","apiWithTemplates","injectEndpoints","build","getTemplates","query","providesTags","result","map","type","id","addTemplate","mutation","body","method","invalidatesTags","deleteTemplate","error","overrideExisting","useAddTemplateMutation","useDeleteTemplateMutation","useGetTemplatesQuery","useAppDispatch","useDispatch","useAppSelector","useSelector","snackbarSlice","createSlice","initialState","time","open","reducers","setSnackbarText","state","action","payload","toggleSnackbar","actions","selectSnackbar","snackbar","searchSlice","file","params","exchange","db","setURL","setFile","setLanguage","setModel","setText","setCode","setEquation","setMode","setExchange","setDb","setParams","encodeURIComponent","applyTemplate","selectCode","search","selectEquation","selectLanguage","selectURL","selectModel","selectMode","selectDb","selectText","selectParams","selectSearchState","TemplateListItem","props","dispatch","template","onClose","isLoading","isSuccess","buttonSx","bgcolor","green","ListItem","alignItems","secondaryAction","Box","sx","m","position","IconButton","onClick","then","edge","CircularProgress","size","color","top","left","zIndex","disablePadding","ListItemButton","ListItemText","primary","Divider","component","TemplateList","templates","data","isError","textAlign","Typography","variant","length","List","t","TemplateListDialog","React","setOpen","handleClose","Button","disableElevation","Dialog","fullWidth","maxWidth","DialogTitle","DialogContent","DialogActions","useGetLanguagesQuery","builder","getLanguages","useGetModelsQuery","getModels","useGetDatabasesQuery","getDatabases","addDelimiters","str","regex","replaceAll","Markdown","MathJax","dynamic","parse","TemplateCreateDialog","languages","models","databases","form","setForm","isDisabled","handleTextFormFieldChange","event","field","newForm","target","value","handleSelectFormFieldChange","handleCreateTemplate","a","newTemplate","unwrap","Grid","container","spacing","item","xs","TextField","onChange","e","label","sm","FormControl","InputLabel","Select","labelId","mod","MenuItem","lang","FormLabel","RadioGroup","row","defaultValue","FormControlLabel","control","Radio","disabled","helperText","Card","CardContent","fontSize","gutterBottom","autoFocus","marginTop","marginLeft","DefaultSearchBar","inputDefaultSearchEl","useRef","useState","showTooltip","setShowTooltip","handleSearch","keyName","onKeyDown","current","focus","Stack","Tooltip","placement","title","Paper","p","display","width","borderRadius","InputBase","inputRef","ml","flex","placeholder","inputProps","key","preventDefault","onFocus","height","orientation","SeparatedSearchBar","URLSearchBar","FileUploadSearchBar","files","setFiles","Error","onDrop","acceptedFiles","getRootProps","getInputProps","justifyContent","minWidth","minHeight","theme","palette","contrastText","border","mx","px","direction","f","Chip","input","max","substring","onDelete","deletedFile","filesCopy","forEach","index","splice","handleDeleteFile","emptyConfig","database_path","db_table_name","db_content_attribute_name","databases_dir_path","index_path","indexes_dir_path","allowed_search_modes","default","separated","apiWithConfigs","getConfigs","updateConfigs","useGetConfigsQuery","useUpdateConfigsMutation","TabPanel","children","currentMode","other","role","hidden","a11yProps","NavbarWithTabs","useTheme","dbs","config","anchorEl","setAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","Link","to","AppBar","Toolbar","noWrap","flexGrow","md","autoWidth","_db","currentTarget","Tabs","newValue","indicatorColor","textColor","Tab","dir","CodeMarkdown","className","components","node","inline","properties","match","exec","wrapLongLines","style","materialDark","PreTag","String","replace","useAddRelevanceMutation","addRelevance","SearchResultDialog","fullScreen","useMediaQuery","breakpoints","down","handleUpVote","relevance","equations","result_id","secondary","main","DialogContentText","SearchResult","useGetResultsQuery","getResults","SearchResults","skipToken","isFetching","setCurrentPageResults","endIndex","setEndIndex","useEffect","shownResults","results","slice","updateShownResults","py","listItemClasses","root","fontWeight","fill","LinearProgress","mt","SearchPage","AboutPage","StoreSnackbar","Snackbar","autoHideDuration","message","ConfigsPage","isUpdating","cfg","setCfg","content","handleTextChange","values","handleCheckboxChange","checked","FormGroup","Checkbox","nonEmptyCfg","Object","fromEntries","entries","filter","my","loader","load","tex","packages","inlineMath","displayMath","App","background","paper","MathJaxContext","path","exact","rootReducer","combineReducers","reducer","snackbarReducer","searchReducer","window","location","hostname","preloadedState","defaultLight","createTheme","store","configureStore","middleware","getDefaultMiddleware","concat","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.96ab18fb.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\n// initialize an empty api service that we'll inject endpoints into later as needed\nexport const emptySplitApi = createApi({\n  reducerPath: 'api',\n  baseQuery: fetchBaseQuery({ baseUrl: '/api/v1' }),\n  tagTypes: ['Languages', 'Models', 'Results', 'Templates', 'Relevances', 'Configs', 'Databases'],\n  endpoints: () => ({}),\n});\n\nexport const splitApi = emptySplitApi;\n","import { emptySplitApi } from '.';\n\nexport interface Template {\n  id?: number;\n  name: string;\n  model: string;\n  mode: string;\n  language: string;\n  text: string;\n  code: string;\n  equation: string;\n  url: string;\n  user: string;\n  database: string;\n}\n\nexport const emptyTemplate: Template = {\n  name: '',\n  text: '',\n  code: '',\n  equation: '',\n  mode: 'default',\n  model: '',\n  language: '',\n  url: '',\n  user: 'homer',\n  database: '',\n};\n\ntype TemplatesResponse = Template[];\n\nconst apiWithTemplates = emptySplitApi.injectEndpoints({\n  endpoints: (build) => ({\n    getTemplates: build.query<TemplatesResponse, void>({\n      query: () => '/query-templates',\n      providesTags: (result) => (result\n        ? [...result.map(({ id }) => ({ type: 'Templates' as const, id })), 'Templates']\n        : ['Templates']),\n    }),\n    addTemplate: build.mutation<Template, Partial<Template>>({\n      query(body) {\n        return {\n          url: '/query-templates',\n          method: 'POST',\n          body,\n        };\n      },\n      invalidatesTags: ['Templates'],\n    }),\n    deleteTemplate: build.mutation<{ success: boolean; id: number }, number>({\n      query(id) {\n        return {\n          url: `/query-templates/${id}`,\n          method: 'DELETE',\n        };\n      },\n      // Invalidates all queries that subscribe to this Template `id` only.\n      invalidatesTags: (result, error, id) => [{ type: 'Templates', id }],\n    }),\n  }),\n  overrideExisting: false,\n});\n\nexport const {\n  useAddTemplateMutation,\n  useDeleteTemplateMutation,\n  useGetTemplatesQuery,\n} = apiWithTemplates;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from '../../app/store';\n\nexport interface SnackbarState {\n  time: number;\n  text: string;\n  open: boolean;\n}\n\nconst initialState: SnackbarState = {\n  time: 5000,\n  text: 'initial text',\n  open: false,\n};\n\nexport const snackbarSlice = createSlice({\n  name: 'snackbar',\n  initialState,\n  reducers: {\n    setSnackbarText: (state, action: PayloadAction<string>) => {\n      state.text = action.payload;\n    },\n    toggleSnackbar: (state, action: PayloadAction<boolean>) => {\n      state.open = action.payload;\n    },\n  },\n});\n\nexport const { setSnackbarText, toggleSnackbar } = snackbarSlice.actions;\nexport const selectSnackbar = (state: RootState) => state.snackbar;\nexport default snackbarSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Template } from '../../app/services/templates';\nimport { RootState } from '../../app/store';\n\nexport type SearchMode = 'default' | 'separated' | 'url' | 'file';\n\nexport interface SearchState {\n  language: string;\n  model: string;\n  mode: SearchMode;\n  text: string;\n  code: string;\n  equation: string;\n  url: string;\n  file: string;\n  params: string | null;\n  exchange: string;\n  db: string;\n}\n\nconst initialState: SearchState = {\n  language: 'english',\n  model: 'PyterrierModel',\n  mode: 'default',\n  text: '',\n  code: '',\n  equation: '',\n  url: '',\n  file: '',\n  params: null,\n  exchange: '',\n  db: 'postdb.db',\n};\n\nexport const searchSlice = createSlice({\n  name: 'search',\n  initialState,\n  reducers: {\n    setURL: (state, action: PayloadAction<string>) => {\n      state.url = action.payload;\n    },\n    setFile: (state, action: PayloadAction<string>) => {\n      state.file = action.payload;\n    },\n    setLanguage: (state, action: PayloadAction<string>) => {\n      state.language = action.payload;\n    },\n    setModel: (state, action: PayloadAction<string>) => {\n      state.model = action.payload;\n    },\n    setText: (state, action: PayloadAction<string>) => {\n      state.text = action.payload;\n    },\n    setCode: (state, action: PayloadAction<string>) => {\n      state.code = action.payload;\n    },\n    setEquation: (state, action: PayloadAction<string>) => {\n      state.equation = action.payload;\n    },\n    setMode: (state, action: PayloadAction<SearchMode>) => {\n      state.mode = action.payload;\n    },\n    setExchange: (state, action: PayloadAction<string>) => {\n      state.exchange = action.payload;\n    },\n    setDb: (state, action: PayloadAction<string>) => {\n      state.db = action.payload;\n    },\n    setParams: (state) => {\n      const {\n        language, model, mode, text, code, equation, exchange, url, db,\n      } = state;\n      switch (mode) {\n        case 'default':\n          state.params = `text=${text}&`\n          + `model=${model}&`\n          + `model-language=${language}&`\n          + `db=${db}`;\n          break;\n        case 'separated':\n          state.params = `code=${code}&`\n          + `equations=${equation}&`\n          + `model=${model}&`\n          + `model-language=${language}&`\n          + `db=${db}`;\n          break;\n        case 'url':\n          state.params = `id=${encodeURIComponent(url)}&`\n          + `exchange=${encodeURIComponent(exchange)}&`\n          + `model=${encodeURIComponent(model)}&`\n          + `model-language=${encodeURIComponent(language)}`\n          + `db=${db}`;\n          break;\n        case 'file':\n          state.params = `id=${encodeURIComponent(url)}&`\n          + `exchange=${encodeURIComponent(exchange)}&`\n          + `model=${encodeURIComponent(model)}&`\n          + `model-language=${encodeURIComponent(language)}`\n          + `db=${db}`;\n          break;\n\n        default:\n          state.params = 'action.payload';\n          break;\n      }\n    },\n    applyTemplate: (state, action: PayloadAction<Template>) => {\n      const {\n        model,\n        language,\n        mode,\n        text,\n        code,\n        equation,\n        url,\n        database,\n      } = action.payload;\n      state.model = model;\n      state.language = language;\n      state.mode = mode as SearchMode;\n      state.text = text;\n      state.code = code;\n      state.equation = equation;\n      state.url = url;\n      state.db = database;\n    },\n  },\n});\n\nexport const {\n  setDb,\n  setLanguage,\n  setModel,\n  setText,\n  setMode,\n  setCode,\n  setEquation,\n  setURL,\n  setFile,\n  setParams,\n  applyTemplate,\n} = searchSlice.actions;\nexport const selectCode = (state: RootState) => state.search.code;\nexport const selectEquation = (state: RootState) => state.search.equation;\nexport const selectLanguage = (state: RootState) => state.search.language;\nexport const selectURL = (state: RootState) => state.search.url;\nexport const selectModel = (state: RootState) => state.search.model;\nexport const selectMode = (state: RootState) => state.search.mode;\nexport const selectDb = (state: RootState) => state.search.db;\nexport const selectText = (state: RootState) => state.search.text;\nexport const selectParams = (state: RootState) => state.search.params;\nexport const selectSearchState = (state: RootState) => state.search;\nexport default searchSlice.reducer;\n","import React from 'react';\n// MUI Components\nimport Box from '@mui/material/Box';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\n// MUI Icons\nimport CheckIcon from '@mui/icons-material/Check';\nimport DeleteIcon from '@mui/icons-material/Delete';\n// Others\nimport { green } from '@mui/material/colors';\nimport { Template, useDeleteTemplateMutation } from '../../app/services/templates';\nimport { useAppDispatch } from '../../app/hooks';\nimport { setSnackbarText, toggleSnackbar } from '../snackbar/snackbarSlice';\nimport { applyTemplate, setParams } from '../search/searchSlice';\n\ninterface TemplateListItemProps {\n  template: Template;\n  onClose: () => void;\n}\n\nexport default function TemplateListItem(props: TemplateListItemProps) {\n  const dispatch = useAppDispatch();\n  const { template, onClose } = props;\n\n  const [deleteTemplate, { isLoading, isSuccess }] = useDeleteTemplateMutation();\n\n  const buttonSx = {\n    ...(isSuccess && {\n      bgcolor: green[500],\n      '&:hover': {\n        bgcolor: green[700],\n      },\n    }),\n  };\n\n  const handleDeleteTemplate = () => {\n    deleteTemplate(template.id as number).then(() => {\n      dispatch(setSnackbarText('Template deleted successfully.'));\n      dispatch(toggleSnackbar(true));\n    });\n  };\n\n  const handleSelectTemplate = () => {\n    dispatch(applyTemplate(template));\n    dispatch(setParams());\n    onClose();\n  };\n\n  return (\n    <>\n      <ListItem\n        key={template.id}\n        alignItems=\"flex-start\"\n        secondaryAction={(\n          <Box sx={{ m: 1, position: 'relative' }}>\n            <IconButton\n              sx={buttonSx}\n              onClick={handleDeleteTemplate}\n              edge=\"end\"\n              aria-label=\"delete\"\n            >\n              {isSuccess ? <CheckIcon /> : <DeleteIcon />}\n            </IconButton>\n            {isLoading && (\n            <CircularProgress\n              size={68}\n              sx={{\n                color: green[500],\n                position: 'absolute',\n                top: -6,\n                left: -6,\n                zIndex: 1,\n              }}\n            />\n            )}\n          </Box>\n\n        )}\n        disablePadding\n      >\n        <ListItemButton onClick={handleSelectTemplate}>\n          <ListItemText\n            primary={template.name}\n          />\n        </ListItemButton>\n      </ListItem>\n      <Divider component=\"li\" />\n    </>\n  );\n}\n","import {\n  CircularProgress,\n  List,\n  Typography,\n  Box,\n} from '@mui/material';\nimport React from 'react';\nimport { useGetTemplatesQuery } from '../../app/services/templates';\nimport TemplateListItem from './TemplateListItem';\n\ninterface TemplateListProps {\n  onClose: () => void;\n}\n\nexport default function TemplateList(props: TemplateListProps) {\n  const { onClose } = props;\n  const { data: templates, isLoading, isError } = useGetTemplatesQuery();\n\n  if (isLoading) {\n    return (\n      <Box sx={{ m: 3, textAlign: 'center' }}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (isError) {\n    return (<Typography variant=\"subtitle1\">Oops! Something went wrong!</Typography>);\n  }\n\n  if (templates?.length === 0) {\n    return (<Typography variant=\"subtitle1\">No templates yet...</Typography>);\n  }\n\n  return (\n    <List>\n      {templates?.map((t) => <TemplateListItem onClose={onClose} key={t.id} template={t} />)}\n    </List>\n  );\n}\n","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport TemplateList from './TemplateList';\n\nexport default function TemplateListDialog() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Button variant=\"contained\" disableElevation onClick={handleClickOpen}>\n        Templates\n      </Button>\n      <Dialog\n        fullWidth\n        maxWidth=\"sm\"\n        open={open}\n        onClose={handleClose}\n      >\n        <DialogTitle>Available Query Templates</DialogTitle>\n        <DialogContent>\n          <TemplateList onClose={handleClose} />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","import { emptySplitApi } from '.';\n\ntype LanguagesResponse = string[];\n\nconst apiWithLanguages = emptySplitApi.injectEndpoints({\n  endpoints: (builder) => ({\n    getLanguages: builder.query<LanguagesResponse, void>({\n      query: () => '/languages',\n      providesTags: ['Languages'],\n    }),\n  }),\n  overrideExisting: false,\n});\n\nexport const { useGetLanguagesQuery } = apiWithLanguages;\n","import { emptySplitApi } from '.';\n\ntype ModelsResponse = string[];\n\nconst apiWithModels = emptySplitApi.injectEndpoints({\n  endpoints: (builder) => ({\n    getModels: builder.query<ModelsResponse, void>({\n      query: () => '/models',\n      providesTags: ['Models'],\n    }),\n  }),\n  overrideExisting: false,\n});\n\nexport const { useGetModelsQuery } = apiWithModels;\n","import { emptySplitApi } from '.';\n\nconst apiWithDatabases = emptySplitApi.injectEndpoints({\n  endpoints: (build) => ({\n    getDatabases: build.query<string[], void>({\n      query: () => '/dbs',\n      providesTags: ['Databases'],\n    }),\n\n  }),\n  overrideExisting: false,\n});\n\nexport const {\n  useGetDatabasesQuery,\n} = apiWithDatabases;\n","import React from 'react';\nimport parse from 'html-react-parser';\nimport { MathJax } from 'better-react-mathjax';\n\nexport function addDelimiters(str: string): string {\n  const regex = /(?<open><span class=\"math-container\" id=\"[a-z0-9]+\">)(?<formel>.*?)(?=<\\/span>|$)(?<close><\\/span>)/g;\n  str = str.replaceAll(regex, '$$$<formel>$$');\n  return str;\n}\ninterface MarkdownProps {\n  text: string\n}\n\nexport default function Markdown(props: MarkdownProps) {\n  const { text } = props;\n\n  return (\n    <>\n      <MathJax dynamic>\n        {parse(addDelimiters(text))}\n      </MathJax>\n    </>\n  );\n}\n","import * as React from 'react';\n// MUI Components\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport FormControl from '@mui/material/FormControl';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormLabel from '@mui/material/FormLabel';\nimport Grid from '@mui/material/Grid';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\n// Others\nimport { green } from '@mui/material/colors';\nimport { useGetLanguagesQuery } from '../../app/services/languages';\nimport { useGetModelsQuery } from '../../app/services/models';\nimport { useGetDatabasesQuery } from '../../app/services/databases';\nimport { useAddTemplateMutation, Template, emptyTemplate } from '../../app/services/templates';\nimport { SearchMode } from '../search/searchSlice';\nimport { setSnackbarText, toggleSnackbar } from '../snackbar/snackbarSlice';\nimport { useAppDispatch } from '../../app/hooks';\nimport Markdown from '../Markdown';\n\ninterface TemplateCreateDialogProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nexport default function TemplateCreateDialog(props: TemplateCreateDialogProps) {\n  const dispatch = useAppDispatch();\n  const { open, onClose } = props;\n\n  // State\n  const { data: languages = [] } = useGetLanguagesQuery();\n  const { data: models = [] } = useGetModelsQuery();\n  const { data: databases = [] } = useGetDatabasesQuery();\n  const [form, setForm] = React.useState<Template>(emptyTemplate);\n\n  const isDisabled = (name: string) => name !== form.mode;\n  const [addTemplate, {\n    isLoading, isSuccess,\n  }] = useAddTemplateMutation();\n\n  // Style\n  const buttonSx = {\n    ...(isSuccess && {\n      bgcolor: green[500],\n      '&:hover': {\n        bgcolor: green[700],\n      },\n    }),\n  };\n\n  // Handlers\n  const handleTextFormFieldChange = (event: React.ChangeEvent<HTMLInputElement>, field: string) => {\n    const newForm = {\n      ...form,\n      [field]: (event.target as HTMLInputElement).value as SearchMode,\n    };\n    setForm(newForm);\n  };\n\n  const handleSelectFormFieldChange = (event: SelectChangeEvent, field: string) => {\n    const newForm = {\n      ...form,\n      [field]: event.target.value as string,\n    };\n    setForm(newForm);\n  };\n\n  const handleCreateTemplate = async () => {\n    const newTemplate = { ...emptyTemplate };\n\n    switch (form.mode) {\n      case 'default':\n        newTemplate.mode = form.mode;\n        newTemplate.text = form.text;\n        break;\n      case 'separated':\n        newTemplate.mode = form.mode;\n        newTemplate.code = form.code;\n        newTemplate.equation = form.equation;\n        break;\n      case 'url':\n        newTemplate.mode = form.mode;\n        newTemplate.url = form.url;\n        break;\n      default:\n        newTemplate.mode = form.mode;\n        newTemplate.text = form.text;\n        break;\n    }\n\n    newTemplate.name = form.name;\n    newTemplate.language = form.language;\n    newTemplate.model = form.model;\n    newTemplate.database = form.database;\n\n    try {\n      await addTemplate(newTemplate).unwrap();\n      setForm(emptyTemplate);\n      onClose();\n      dispatch(setSnackbarText('✅‎‎ Template created successfully.'));\n      dispatch(toggleSnackbar(true));\n    } catch (e) {\n      dispatch(setSnackbarText('😢 Something went wront. Your template could not be created.'));\n      dispatch(toggleSnackbar(true));\n    }\n  };\n\n  return (\n    <Dialog open={open} fullWidth maxWidth=\"sm\">\n      <DialogTitle>Create Template</DialogTitle>\n      <DialogContent>\n\n        <Grid container spacing={2}>\n\n          <Grid item xs={12}>\n            <TextField\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => handleTextFormFieldChange(e, 'name')}\n              id=\"name-input\"\n              label=\"Name\"\n              variant=\"filled\"\n              fullWidth\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n            <FormControl fullWidth variant=\"filled\">\n              <InputLabel id=\"model-select-label\">Model</InputLabel>\n              <Select\n                labelId=\"model-select-label\"\n                id=\"model-select\"\n                value={form.model}\n                onChange={(e: SelectChangeEvent) => handleSelectFormFieldChange(e, 'model')}\n              >\n                {models?.map((mod) => <MenuItem key={mod} value={mod}>{mod}</MenuItem>)}\n              </Select>\n            </FormControl>\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n            <FormControl fullWidth variant=\"filled\">\n              <InputLabel id=\"modelLanguage-select-label\">Model language</InputLabel>\n              <Select\n                labelId=\"modelLanguage-select-label\"\n                id=\"modelLanguage-select\"\n                value={form.language}\n                onChange={(e: SelectChangeEvent) => handleSelectFormFieldChange(e, 'language')}\n              >\n                {languages?.map((lang) => <MenuItem key={lang} value={lang}>{lang}</MenuItem>)}\n              </Select>\n            </FormControl>\n          </Grid>\n\n          <Grid item xs={12}>\n            <FormControl fullWidth variant=\"filled\">\n              <InputLabel id=\"database-select-label\">Database</InputLabel>\n              <Select\n                labelId=\"database-select-label\"\n                id=\"database-select\"\n                value={form.database}\n                onChange={(e: SelectChangeEvent) => handleSelectFormFieldChange(e, 'database')}\n              >\n                {databases?.map((db) => <MenuItem key={db} value={db}>{db}</MenuItem>)}\n              </Select>\n            </FormControl>\n          </Grid>\n\n          <Grid item xs={12}>\n            <FormControl component=\"fieldset\">\n              <FormLabel component=\"legend\">Search mode...</FormLabel>\n              <RadioGroup\n                row\n                defaultValue=\"default\"\n                onChange={(e) => handleSelectFormFieldChange(e, 'mode')}\n                aria-label=\"search mode\"\n                name=\"search-mode-radio-buttons-group\"\n              >\n                <FormControlLabel value=\"default\" control={<Radio />} label=\"Default\" />\n                <FormControlLabel value=\"separated\" control={<Radio />} label=\"Separated\" />\n                <FormControlLabel value=\"url\" control={<Radio />} label=\"URL\" />\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n\n          <Grid item xs={12}>\n            <TextField\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => handleTextFormFieldChange(e, 'text')}\n              disabled={isDisabled('default')}\n              id=\"default-search-input\"\n              label=\"Default Search\"\n              variant=\"filled\"\n              fullWidth\n              helperText=\"This field supports markdown.\"\n            />\n          </Grid>\n\n          <Grid item xs={12}>\n            <TextField\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => handleTextFormFieldChange(e, 'code')}\n              disabled={isDisabled('separated')}\n              id=\"code-search-input\"\n              label=\"Code\"\n              variant=\"filled\"\n              fullWidth\n            />\n          </Grid>\n\n          <Grid item xs={12}>\n            <TextField\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => handleTextFormFieldChange(e, 'equation')}\n              disabled={isDisabled('separated')}\n              id=\"equation-search-input\"\n              label=\"Equation\"\n              variant=\"filled\"\n              fullWidth\n              helperText=\"This field supports markdown.\"\n            />\n          </Grid>\n\n          <Grid item xs={12}>\n            <TextField\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => handleTextFormFieldChange(e, 'url')}\n              disabled={isDisabled('url')}\n              id=\"id-search-input\"\n              label=\"ID or URL\"\n              variant=\"filled\"\n              fullWidth\n            />\n          </Grid>\n\n          <Grid item xs={12}>\n            <Card variant=\"outlined\">\n              <CardContent>\n                <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n                  Equation Preview\n                </Typography>\n                <Typography variant=\"h5\" component=\"div\">\n                  <Markdown text={form.text} />\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n\n        </Grid>\n\n      </DialogContent>\n      <DialogActions>\n        <Button autoFocus onClick={() => onClose()}>\n          Cancel\n        </Button>\n        <Box sx={{ m: 1, position: 'relative' }}>\n          <Button\n            variant=\"contained\"\n            sx={buttonSx}\n            disabled={isLoading}\n            onClick={handleCreateTemplate}\n          >\n            Create\n          </Button>\n          {isLoading && (\n            <CircularProgress\n              size={24}\n              sx={{\n                color: 'success',\n                position: 'absolute',\n                top: '50%',\n                left: '50%',\n                marginTop: '-12px',\n                marginLeft: '-12px',\n              }}\n            />\n          )}\n        </Box>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","/* eslint-disable max-len */\nimport React from 'react';\n// MUI Components\nimport Box from '@mui/material/Box';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport InputBase from '@mui/material/InputBase';\nimport Paper from '@mui/material/Paper';\nimport Stack from '@mui/material/Stack';\nimport Tooltip from '@mui/material/Tooltip';\nimport Typography from '@mui/material/Typography';\n// MUI Icons\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport SearchIcon from '@mui/icons-material/Search';\n// Others\nimport Hotkeys from 'react-hot-keys';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport CreateTemplateDialog from '../templates/TemplateCreateDialog';\nimport {\n  setText, setMode, setParams, selectText,\n} from './searchSlice';\n\nexport default function DefaultSearchBar() {\n  const inputDefaultSearchEl = React.useRef<HTMLInputElement>(null);\n  const dispatch = useAppDispatch();\n  // State\n  const query = useAppSelector(selectText);\n  const [open, setOpen] = React.useState(false);\n  const [showTooltip, setShowTooltip] = React.useState(true);\n\n  // Handlers\n  const handleQueryTextChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    // console.log(event);\n    dispatch(setText((event.target as HTMLInputElement).value));\n  };\n\n  const handleSearch = () => {\n    dispatch(setText(query));\n    dispatch(setMode('default'));\n    dispatch(setParams());\n  };\n\n  const handleEnter = (event: React.KeyboardEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      handleSearch();\n    }\n  };\n\n  const onKeyCombo = () => {\n    inputDefaultSearchEl.current?.focus();\n  };\n\n  return (\n    <>\n      <Hotkeys\n        keyName=\"command+k,ctrl+k\"\n        onKeyDown={onKeyCombo}\n      >\n\n        <Stack>\n          <Tooltip\n            open={showTooltip}\n            placement=\"top-start\"\n            title=\"Try ⌘+K\"\n          >\n            <Paper\n              component=\"form\"\n              sx={{\n                p: '2px 4px',\n                display: 'flex',\n                alignItems: 'center',\n                width: 800,\n                borderRadius: '30px',\n                m: 'auto',\n              }}\n            >\n              <InputBase\n                inputRef={inputDefaultSearchEl}\n                sx={{ ml: 2, flex: 1 }}\n                placeholder=\"Search\"\n                inputProps={{ 'aria-label': 'search' }}\n                value={query}\n                onChange={handleQueryTextChange}\n                onKeyDown={handleEnter}\n                onFocus={() => setShowTooltip(false)}\n              />\n              <Tooltip title=\"Create query template\">\n                <IconButton sx={{ p: '10px' }} aria-label=\"open advanced search\" onClick={() => setOpen(true)}>\n                  <AddCircleIcon />\n                </IconButton>\n              </Tooltip>\n\n              <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\n\n              <Tooltip title=\"Run search\">\n                <IconButton sx={{ p: '10px' }} onClick={handleSearch} aria-label=\"run search\">\n                  <SearchIcon />\n                </IconButton>\n              </Tooltip>\n            </Paper>\n          </Tooltip>\n\n          <Box sx={{ width: 800, textAlign: 'center' }}>\n            <Typography color=\"textPrimary\" variant=\"caption\">\n              This is a Markdown text field. For code use ``` as delimiter, like ```my code here```. For Equations use $ as delimiter.\n            </Typography>\n          </Box>\n        </Stack>\n        <CreateTemplateDialog\n          open={open}\n          onClose={() => setOpen(false)}\n        />\n      </Hotkeys>\n    </>\n  );\n}\n","import React from 'react';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport TextField from '@mui/material/TextField';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport {\n  selectCode,\n  selectEquation,\n  setCode, setEquation, setMode, setParams,\n} from './searchSlice';\n\nexport default function SeparatedSearchBar() {\n  const dispatch = useAppDispatch();\n  const code = useAppSelector(selectCode);\n  const equation = useAppSelector(selectEquation);\n\n  const handleCodeChange = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    dispatch(setCode((event.target as HTMLInputElement).value as string));\n  };\n\n  // eslint-disable-next-line max-len\n  const handleEquationChange = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    dispatch(setEquation((event.target as HTMLInputElement).value as string));\n  };\n\n  const handleSearch = () => {\n    dispatch(setMode('separated'));\n    dispatch(setCode(code));\n    dispatch(setEquation(equation));\n    dispatch(setParams());\n  };\n\n  return (\n    <Stack spacing={2}>\n      <TextField\n        sx={{ width: '400px' }}\n        value={code}\n        id=\"filled-basic\"\n        label=\"Code\"\n        variant=\"filled\"\n        onChange={handleCodeChange}\n      />\n\n      <TextField\n        sx={{ width: '400px' }}\n        value={equation}\n        id=\"filled-basic\"\n        label=\"Equations\"\n        variant=\"filled\"\n        onChange={handleEquationChange}\n      />\n\n      <Button variant=\"contained\" onClick={handleSearch}>Search</Button>\n    </Stack>\n  );\n}\n","import React from 'react';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport TextField from '@mui/material/TextField';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport {\n  setURL, setMode, setParams, selectURL,\n} from './searchSlice';\n\nexport default function URLSearchBar() {\n  const dispatch = useAppDispatch();\n\n  const url = useAppSelector(selectURL);\n\n  const handleFormChange = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    dispatch(setURL((event.target.value as string)));\n  };\n\n  const handleSearch = () => {\n    dispatch(setMode('url'));\n    dispatch(setURL(url));\n    dispatch(setParams());\n  };\n\n  return (\n    <Stack spacing={2}>\n      <TextField\n        sx={{ width: '400px' }}\n        value={url}\n        id=\"filled-basic\"\n        label=\"Id or URL\"\n        variant=\"filled\"\n        onChange={handleFormChange}\n      />\n\n      <Button variant=\"contained\" onClick={handleSearch}>Search</Button>\n    </Stack>\n  );\n}\n","import React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Chip from '@mui/material/Chip';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport Dropzone from 'react-dropzone';\n\nexport default function FileUploadSearchBar() {\n  const [files, setFiles] = React.useState<File[]>([]);\n  const handleAcceptedFiles = (droppedFiles: File[]) => {\n    setFiles(droppedFiles);\n  };\n\n  const truncate = (input: string, max: number) => {\n    if (input.length > max) {\n      return `${input.substring(0, max)}...`;\n    }\n    return input;\n  };\n\n  const handleDeleteFile = (deletedFile: File) => {\n    const filesCopy = [...files];\n    files.forEach((f, index) => {\n      if (f.name === deletedFile.name) {\n        filesCopy.splice(index, 1);\n      }\n    });\n    setFiles(filesCopy);\n  };\n\n  const handleSearch = () => {\n    throw Error('TODO');\n  };\n\n  return (\n    <Dropzone onDrop={(acceptedFiles) => handleAcceptedFiles(acceptedFiles)}>\n      {({ getRootProps, getInputProps }) => (\n        <Box id=\"lol\">\n          <Stack spacing={4}>\n            <Box\n              {...getRootProps()}\n              sx={{\n                justifyContent: 'center',\n                minWidth: '70vh',\n                minHeight: '10vh',\n                bgcolor: (theme) => theme.palette.primary.contrastText,\n                display: 'flex',\n                alignItems: 'center',\n                border: '2px dashed #909090',\n              }}\n            >\n              <input {...getInputProps()} />\n              <Typography variant=\"body1\" component=\"p\" color=\"textPrimary\">\n                Drag n drop some files here, or click to select files\n              </Typography>\n            </Box>\n            <Box sx={{ textAlign: 'center' }}>\n              <Button\n                onClick={handleSearch}\n                variant=\"contained\"\n                sx={{ mx: 'auto', px: (theme) => theme.spacing(4) }}\n              >\n                Search\n              </Button>\n            </Box>\n          </Stack>\n\n          <Stack direction=\"row\" sx={{ minHeight: '32px' }} spacing={2}>\n            <Typography variant=\"button\" component=\"p\" color=\"textPrimary\">\n              Files:\n            </Typography>\n            {\n              files.length > 0\n              && files.map((f) => (\n                // eslint-disable-next-line max-len\n                <Chip key={f.name} label={truncate(f.name, 10)} onDelete={() => handleDeleteFile(f)} />\n              ))\n            }\n          </Stack>\n\n        </Box>\n      )}\n    </Dropzone>\n  );\n}\n","import { emptySplitApi } from '.';\n\nexport interface Config {\n  database_path: string;\n  db_table_name: string;\n  db_content_attribute_name: string;\n  databases_dir_path: string;\n  index_path: string;\n  indexes_dir_path: string;\n  allowed_search_modes: {\n    default: boolean,\n    separated: boolean,\n    url: boolean,\n    file: boolean,\n  }\n}\n\nexport const emptyConfig: Config = {\n  database_path: '',\n  db_table_name: '',\n  db_content_attribute_name: '',\n  databases_dir_path: '',\n  index_path: '',\n  indexes_dir_path: '',\n  allowed_search_modes: {\n    default: true, separated: true, url: true, file: true,\n  },\n};\n\nconst apiWithConfigs = emptySplitApi.injectEndpoints({\n  endpoints: (build) => ({\n    getConfigs: build.query<Config, void>({\n      query: () => '/configs',\n      providesTags: ['Configs'],\n    }),\n    updateConfigs: build.mutation<Config, Partial<Config>>({\n      query: (data) => {\n        const { ...body } = data;\n        return {\n          url: '/configs',\n          method: 'POST',\n          body,\n        };\n      },\n    }),\n  }),\n  overrideExisting: false,\n});\n\nexport const {\n  useGetConfigsQuery,\n  useUpdateConfigsMutation,\n} = apiWithConfigs;\n","import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport AppBar from '@mui/material/AppBar';\nimport Menu from '@mui/material/Menu';\nimport FormControl from '@mui/material/FormControl';\nimport Toolbar from '@mui/material/Toolbar';\nimport InputLabel from '@mui/material/InputLabel';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport IconButton from '@mui/material/IconButton';\nimport MenuItem from '@mui/material/MenuItem';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport { Link } from 'react-router-dom';\nimport TemplateListDialog from '../templates/TemplateListDialog';\nimport DefaultSearchBar from '../search/DefaultSearchBar';\nimport SeparatedSearchBar from '../search/SeparatedSearchBar';\nimport URLSearchBar from '../search/URLSearchBar';\nimport FileUploadSearchBar from '../search/FileUploadSearchBar';\nimport { useGetDatabasesQuery } from '../../app/services/databases';\nimport { useGetLanguagesQuery } from '../../app/services/languages';\nimport { useGetModelsQuery } from '../../app/services/models';\nimport {\n  selectModel,\n  selectLanguage,\n  setModel,\n  setLanguage,\n  selectMode,\n  setMode,\n  SearchMode,\n  setDb,\n  selectDb,\n} from '../search/searchSlice';\nimport { useAppSelector, useAppDispatch } from '../../app/hooks';\nimport { emptyConfig, useGetConfigsQuery } from '../../app/services/configs';\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  dir?: string;\n  currentMode: string;\n  value: string;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const {\n    children, value, currentMode, ...other\n  } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== currentMode}\n      id={`tabpanel-${currentMode}`}\n      aria-labelledby={`tab-${currentMode}`}\n      {...other}\n    >\n      {value === currentMode && (\n        <Box sx={{\n          display: 'flex',\n          minHeight: (theme) => theme.spacing(50),\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n        >\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nfunction a11yProps(index: number) {\n  return {\n    id: `tab-${index}`,\n    'aria-controls': `tabpanel-${index}`,\n  };\n}\n\nexport default function NavbarWithTabs() {\n  const dispatch = useAppDispatch();\n  const theme = useTheme();\n  const { data: languages = [] } = useGetLanguagesQuery();\n  const { data: models = [] } = useGetModelsQuery();\n  const { data: dbs = [] } = useGetDatabasesQuery();\n  const { data: config = emptyConfig } = useGetConfigsQuery();\n  const model = useAppSelector(selectModel);\n  const db = useAppSelector(selectDb);\n  const language = useAppSelector(selectLanguage);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const [, setMobileMoreAnchorEl] = React.useState<null | HTMLElement>(null);\n  const mode = useAppSelector(selectMode);\n\n  const isMenuOpen = Boolean(anchorEl);\n\n  const handleChangeModel = (event: SelectChangeEvent) => {\n    dispatch(setModel(event.target.value as string));\n  };\n\n  const handleChangeLanguage = (event: SelectChangeEvent) => {\n    dispatch(setLanguage(event.target.value as string));\n  };\n\n  const handleChangeDb = (event: SelectChangeEvent) => {\n    dispatch(setDb(event.target.value as string));\n  };\n\n  const handleChange = (event: React.SyntheticEvent, newValue: string) => {\n    dispatch(setMode(newValue as SearchMode));\n  };\n\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const menuId = 'account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{\n        vertical: 'top',\n        horizontal: 'right',\n      }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'right',\n      }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem component={Link} to=\"/settings\">Settings</MenuItem>\n    </Menu>\n  );\n\n  return (\n    <Box sx={{ bgcolor: 'background.paper' }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"div\"\n            sx={{ display: { xs: 'none', sm: 'block' } }}\n          >\n            RetrievalSystem\n          </Typography>\n\n          <Box sx={{ flexGrow: 1 }} />\n\n          <TemplateListDialog />\n\n          <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\n\n            <FormControl sx={{ mx: 2, minWidth: 200 }} variant=\"filled\">\n              <InputLabel id=\"model-select-label\">Database</InputLabel>\n              <Select\n                size=\"small\"\n                autoWidth\n                labelId=\"db-select-label\"\n                id=\"db-select\"\n                value={db}\n                onChange={handleChangeDb}\n              >\n                {dbs?.map((_db) => <MenuItem key={_db} value={_db}>{_db}</MenuItem>)}\n              </Select>\n            </FormControl>\n\n            <FormControl sx={{ mx: 2, minWidth: 200 }} variant=\"filled\">\n              <InputLabel id=\"model-select-label\">Model</InputLabel>\n              <Select\n                size=\"small\"\n                autoWidth\n                labelId=\"model-select-label\"\n                id=\"model-select\"\n                value={model}\n                onChange={handleChangeModel}\n              >\n                {models?.map((mod) => <MenuItem key={mod} value={mod}>{mod}</MenuItem>)}\n              </Select>\n            </FormControl>\n            <FormControl sx={{ mx: 2, minWidth: 200 }} variant=\"filled\">\n              <InputLabel id=\"modelLanguage-select-label\">Model language</InputLabel>\n              <Select\n                size=\"small\"\n                autoWidth\n                labelId=\"modelLanguage-select-label\"\n                id=\"modelLanguage-select\"\n                value={language}\n                onChange={handleChangeLanguage}\n              >\n                {languages?.map((lang) => <MenuItem key={lang} value={lang}>{lang}</MenuItem>)}\n              </Select>\n            </FormControl>\n\n            <IconButton\n              size=\"large\"\n              edge=\"end\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircleIcon />\n            </IconButton>\n          </Box>\n\n        </Toolbar>\n        <Tabs\n          value={mode}\n          onChange={handleChange}\n          indicatorColor=\"secondary\"\n          textColor=\"inherit\"\n          variant=\"fullWidth\"\n        >\n          <Tab disabled={!config.allowed_search_modes.default} value=\"default\" label=\"Default\" {...a11yProps(0)} />\n          <Tab disabled={!config.allowed_search_modes.separated} value=\"separated\" label=\"Separated\" {...a11yProps(1)} />\n          <Tab disabled={!config.allowed_search_modes.url} value=\"url\" label=\"ID or URL\" {...a11yProps(2)} />\n          <Tab disabled={!config.allowed_search_modes.file} value=\"file\" label=\"File\" {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n\n      <TabPanel value=\"default\" currentMode={mode} dir={theme.direction}>\n        <DefaultSearchBar />\n      </TabPanel>\n      <TabPanel value=\"separated\" currentMode={mode} dir={theme.direction}>\n        <SeparatedSearchBar />\n      </TabPanel>\n      <TabPanel value=\"url\" currentMode={mode} dir={theme.direction}>\n        <URLSearchBar />\n      </TabPanel>\n      <TabPanel value=\"file\" currentMode={mode} dir={theme.direction}>\n        <FileUploadSearchBar />\n      </TabPanel>\n\n      {renderMenu}\n    </Box>\n  );\n}\n","import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { materialDark } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nexport function addDelimiters(str: string): string {\n  return `\\`\\`\\`java\\n${str}\\n\\`\\`\\``;\n}\n\ninterface CodeMarkdownProps {\n  text: string\n}\n\nexport default function CodeMarkdown(props: CodeMarkdownProps) {\n  const { text } = props;\n\n  return (\n    <ReactMarkdown\n      className=\"code-block\"\n      components={{\n        code({\n          node, inline, className, children, ...properties\n        }) {\n          const match = /language-(\\w+)/.exec(className || '');\n          return !inline && match ? (\n            <SyntaxHighlighter\n              wrapLongLines\n              style={materialDark}\n              language={match[1]}\n              PreTag=\"div\"\n              {...properties}\n            >\n              {String(children).replace(/\\n$/, '')}\n            </SyntaxHighlighter>\n          ) : (\n            <code className={className} {...properties}>\n              {children}\n            </code>\n          );\n        },\n      }}\n    >\n      {addDelimiters(text)}\n    </ReactMarkdown>\n  );\n}\n","import { emptySplitApi } from '.';\n\nexport interface Relevance {\n  query: {\n    id: number;\n    code: string;\n    text: string;\n    equations: string;\n    exchange: string;\n  };\n  result_id: number;\n  value: 'yes' | 'no';\n}\n\ntype RelevanceResponse = any;\n\nconst apiWithRelevances = emptySplitApi.injectEndpoints({\n  endpoints: (builder) => ({\n    addRelevance: builder.mutation<RelevanceResponse, Relevance>({\n      query(body) {\n        return {\n          url: '/relevance',\n          method: 'POST',\n          body,\n        };\n      },\n      invalidatesTags: ['Relevances'],\n    }),\n  }),\n  overrideExisting: false,\n});\n\nexport const { useAddRelevanceMutation } = apiWithRelevances;\n","import React from 'react';\nimport Box from '@mui/material/Box';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\n// import sanitizeHtml from 'sanitize-html';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { useTheme } from '@mui/material/styles';\nimport { IconButton } from '@mui/material';\nimport ThumbDownIcon from '@mui/icons-material/ThumbDown';\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport { Result } from '../../app/services/results';\nimport { useAddRelevanceMutation, Relevance } from '../../app/services/relevances';\nimport { useAppSelector } from '../../app/hooks';\nimport { selectSearchState } from './searchSlice';\nimport Markdown from '../Markdown';\n\ninterface SearchResultDialogProps {\n  onClose: () => void,\n  result: Result;\n  open: boolean;\n}\n\nexport default function SearchResultDialog(props: SearchResultDialogProps) {\n  const { result, onClose, open } = props;\n  const { id, title, body } = result;\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n  const [addRelevance] = useAddRelevanceMutation();\n  const search = useAppSelector(selectSearchState);\n\n  const handleUpVote = async () => {\n    try {\n      const relevance: Relevance = {\n        query: {\n          id: -1,\n          code: search.code,\n          equations: search.equation,\n          text: search.text,\n          exchange: search.exchange,\n        },\n        result_id: id,\n        value: 'yes',\n      };\n      await addRelevance(relevance);\n      throw Error('TODO');\n    } catch {\n      throw Error('TODO');\n    }\n  };\n\n  const handleDownVote = () => {\n    throw Error('TODO');\n  };\n\n  return (\n    <Dialog\n      onClose={onClose}\n      open={open}\n      fullWidth\n      maxWidth=\"lg\"\n      fullScreen={fullScreen}\n    >\n      <DialogTitle sx={{ color: (t) => t.palette.secondary.main, display: 'flex', alignItems: 'center' }}>\n        {title}\n        <Box sx={{ flexGrow: 1 }} />\n\n        <Box sx={{ mx: (t) => t.spacing(2) }}>\n          <Typography variant=\"body2\" color=\"textPrimary\">Is this relevant?</Typography>\n        </Box>\n        <IconButton onClick={handleUpVote}>\n          <ThumbUpIcon fontSize=\"small\" />\n        </IconButton>\n        <IconButton onClick={handleDownVote}>\n          <ThumbDownIcon fontSize=\"small\" />\n        </IconButton>\n\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText />\n        <Typography\n          component=\"div\"\n          variant=\"body1\"\n        >\n          <Markdown text={body} />\n        </Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} variant=\"text\">\n          close\n        </Button>\n      </DialogActions>\n\n    </Dialog>\n  );\n}\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport Divider from '@mui/material/Divider';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport Markdown from '../Markdown';\nimport CodeMarkdown from '../CodeMarkdown';\nimport { Result } from '../../app/services/results';\nimport SearchResultDialog from './SearchResultDialog';\n\ninterface SearchResultProps {\n  result: Result;\n}\n\nexport default function SearchResult(props: SearchResultProps) {\n  const { result } = props;\n  const {\n    title, body, language,\n  } = result;\n  const [open, setOpen] = React.useState(false);\n\n  if (language === 'java') {\n    return (\n      <>\n        <ListItem\n          alignItems=\"flex-start\"\n        >\n          <ListItemButton onClick={() => setOpen(true)}>\n            <CodeMarkdown text={body} />\n          </ListItemButton>\n        </ListItem>\n        <Divider variant=\"middle\" component=\"li\" />\n        <SearchResultDialog result={result} open={open} onClose={() => setOpen(false)} />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <ListItem\n        alignItems=\"flex-start\"\n      >\n        <ListItemButton onClick={() => setOpen(true)}>\n          <ListItemText\n            primary={title}\n          >\n            <Markdown text={body} />\n          </ListItemText>\n        </ListItemButton>\n      </ListItem>\n      <Divider variant=\"middle\" component=\"li\" />\n      <SearchResultDialog result={result} open={open} onClose={() => setOpen(false)} />\n    </>\n  );\n}\n","import { emptySplitApi } from '.';\n\nexport interface Result {\n  acceptedAnswerId?: number | null;\n  body: string;\n  id: number;\n  parentId?: number;\n  postTypeId?: number;\n  title: string;\n  tags: string | null;\n  cut: boolean;\n  relevantSentence: string;\n  language?: string;\n  comment?: string;\n  url?: string;\n}\n\n// TODO: change the response data structure in the backend then here.\ntype ResultsResponse = { results: Result[] };\n\nconst apiWithResults = emptySplitApi.injectEndpoints({\n  endpoints: (builder) => ({\n    getResults: builder.query<ResultsResponse, string | Symbol>({\n      // TODO: change url to search?${params} AND add params as argument\n      query: (params) => `/search?${params}`,\n      providesTags: ['Results'],\n    }),\n  }),\n  overrideExisting: false,\n});\n\nexport const { useGetResultsQuery } = apiWithResults;\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport Box from '@mui/material/Box';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport List from '@mui/material/List';\nimport Paper from '@mui/material/Paper';\nimport { listItemClasses } from '@mui/material/ListItem';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport { skipToken } from '@reduxjs/toolkit/query/react';\nimport Button from '@mui/material/Button';\nimport SearchResult from './SearchResult';\nimport { Result, useGetResultsQuery } from '../../app/services/results';\nimport { useAppSelector } from '../../app/hooks';\nimport { selectParams } from './searchSlice';\n\nconst RESULTS_PER_PAGE = 10;\n\nexport default function SearchResults() {\n  const params = useAppSelector(selectParams);\n  const {\n    data, isLoading, isFetching, isError,\n  } = useGetResultsQuery(params ?? skipToken);\n  const [currentPageResults, setCurrentPageResults] = React.useState<Result[]>([]);\n  const [endIndex, setEndIndex] = React.useState(RESULTS_PER_PAGE);\n\n  const updateShownResults = () => {\n    if (data) {\n      const shownResults = data.results.slice(0, endIndex);\n      setCurrentPageResults(shownResults);\n    }\n  };\n\n  const handleLoadMore = () => {\n    setEndIndex(endIndex + RESULTS_PER_PAGE);\n  };\n\n  React.useEffect(() => {\n    updateShownResults();\n  }, []);\n\n  if (isError) {\n    return (\n      <Paper\n        sx={{\n          px: 16,\n          py: 2,\n          textAlign: 'center',\n        }}\n      >\n        <Typography variant=\"h4\" color=\"textPrimary\">Oops... something went wrong</Typography>\n      </Paper>\n    );\n  }\n\n  if (isLoading || isFetching) {\n    return (\n      <Box\n        sx={{\n          px: 16,\n          py: 2,\n          bgcolor: 'background.default',\n          [`& .active, & .${listItemClasses.root}:hover`]: {\n            color: 'red',\n            fontWeight: 'bold',\n            '& svg': {\n              fill: 'red',\n            },\n          },\n        }}\n      >\n        <LinearProgress />\n      </Box>\n    );\n  }\n\n  if (!data) {\n    return null;\n  }\n\n  if (data.results.length === 0) {\n    return (\n      <Box\n        sx={{\n          px: 16,\n          py: 2,\n          bgcolor: 'background.paper',\n          textAlign: 'center',\n        }}\n      >\n        <Typography variant=\"body1\" color=\"textPrimary\">0 results</Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <Stack sx={{ px: 16, py: 2 }}>\n      <Typography variant=\"h4\" color=\"textPrimary\">Results:</Typography>\n      <List sx={{ width: '100%', bgcolor: 'background.paper', borderRadius: 3 }}>\n        {data.results.slice(0, endIndex).map(\n          (result) => <SearchResult key={result.id} result={result} />,\n        )}\n      </List>\n      <Button\n        sx={{ p: 2, mt: 2 }}\n        variant=\"contained\"\n        onClick={handleLoadMore}\n        disabled={endIndex >= data.results.length}\n      >\n        Load more\n      </Button>\n    </Stack>\n  );\n}\n","import React from 'react';\nimport Stack from '@mui/material/Stack';\nimport NavbarWithTabs from '../navbar/NavbarWithTabs';\nimport SearchResults from './SearchResults';\n\nexport default function SearchPage() {\n  return (\n    <Stack id=\"search-page-stack\">\n      <NavbarWithTabs />\n      <SearchResults />\n    </Stack>\n  );\n}\n","import React from 'react';\nimport Grid from '@mui/material/Grid';\n\nexport default function AboutPage() {\n  return (\n    <Grid item xs={12}>\n      About page\n    </Grid>\n  );\n}\n","import React from 'react';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport Snackbar from '@mui/material/Snackbar';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { useAppSelector, useAppDispatch } from '../../app/hooks';\nimport { selectSnackbar, toggleSnackbar } from './snackbarSlice';\n\nexport default function StoreSnackbar() {\n  const { time, text, open } = useAppSelector(selectSnackbar);\n  const dispatch = useAppDispatch();\n\n  const action = (\n    <>\n      <Button color=\"secondary\" size=\"small\" onClick={() => dispatch(toggleSnackbar(false))}>\n        UNDO\n      </Button>\n      <IconButton\n        size=\"small\"\n        aria-label=\"close\"\n        color=\"inherit\"\n        onClick={() => dispatch(toggleSnackbar(false))}\n      >\n        <CloseIcon fontSize=\"small\" />\n      </IconButton>\n    </>\n  );\n\n  return (\n    <Snackbar\n      autoHideDuration={time}\n      onClose={() => dispatch(toggleSnackbar(false))}\n      message={text}\n      open={open}\n      action={action}\n    />\n  );\n}\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport Stack from '@mui/material/Stack';\nimport TextField from '@mui/material/TextField';\nimport {\n  Config,\n  emptyConfig,\n  useUpdateConfigsMutation,\n  useGetConfigsQuery,\n} from '../../app/services/configs';\n\nexport default function ConfigsPage() {\n  const [updateConfigs, { isLoading: isUpdating }] = useUpdateConfigsMutation();\n\n  const {\n    data,\n    isSuccess,\n    isLoading,\n    isError,\n  } = useGetConfigsQuery();\n\n  const [cfg, setCfg] = React.useState<Config>(emptyConfig);\n\n  React.useEffect(() => {\n    if (data) {\n      setCfg(data);\n    }\n  }, [isSuccess]);\n\n  const handleTextChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n    setCfg((values: Config) => ({ ...values, [name]: value }));\n  };\n\n  const handleCheckboxChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = event.target;\n    setCfg((values: Config) => ({\n      ...values,\n      allowed_search_modes: {\n        ...values.allowed_search_modes, [name]: checked,\n      },\n    }));\n  };\n\n  const handleUpdateConfig = () => {\n    // filter empty properties\n    const nonEmptyCfg = Object.fromEntries(Object.entries(cfg).filter(([, v]) => v !== ''));\n    updateConfigs(nonEmptyCfg);\n  };\n\n  let content;\n\n  if (isLoading) content = (<LinearProgress />);\n  if (isError) {\n    content = (\n      <Box role=\"contentinfo\">Oops 😯 something went wrong</Box>\n    );\n  }\n  if (isSuccess) {\n    content = (\n      <Stack spacing={2}>\n        <TextField\n          onChange={handleTextChange}\n          label=\"DATABASE_PATH\"\n          variant=\"filled\"\n          name=\"database_path\"\n          id=\"database_path\"\n          value={cfg.database_path}\n        />\n        <TextField\n          onChange={handleTextChange}\n          label=\"DATABASES_DIR_PATH\"\n          variant=\"filled\"\n          name=\"databases_dir_path\"\n          id=\"databases_dir_path\"\n          value={cfg.databases_dir_path}\n        />\n        <TextField\n          onChange={handleTextChange}\n          label=\"DB_TABLE_NAME\"\n          variant=\"filled\"\n          name=\"db_table_name\"\n          id=\"db_table_name\"\n          value={cfg.db_table_name}\n        />\n        <TextField\n          onChange={handleTextChange}\n          label=\"DB_CONTENT_ATTRIBUTE_NAME\"\n          variant=\"filled\"\n          name=\"db_content_attribute_name\"\n          id=\"db_content_attribute_name\"\n          value={cfg.db_content_attribute_name}\n        />\n        <TextField\n          onChange={handleTextChange}\n          label=\"INDEX_PATH\"\n          variant=\"filled\"\n          name=\"index_path\"\n          id=\"index_path\"\n          value={cfg.index_path}\n        />\n        <TextField\n          onChange={handleTextChange}\n          label=\"INDEXES_DIR_PATH\"\n          variant=\"filled\"\n          name=\"indexes_dir_path\"\n          id=\"indexes_dir_path\"\n          value={cfg.indexes_dir_path}\n        />\n\n        <FormGroup row>\n          <FormControlLabel\n            disabled\n            control={(\n              <Checkbox\n                onChange={handleCheckboxChange}\n                checked={cfg.allowed_search_modes.default}\n                name=\"default\"\n                inputProps={{ 'aria-label': 'controlled' }}\n              />\n            )}\n            label=\"Default\"\n          />\n          <FormControlLabel\n            control={(\n              <Checkbox\n                onChange={handleCheckboxChange}\n                checked={cfg.allowed_search_modes.separated}\n                name=\"separated\"\n              />\n            )}\n            label=\"Separated\"\n          />\n          <FormControlLabel\n            control={(\n              <Checkbox\n                onChange={handleCheckboxChange}\n                checked={cfg.allowed_search_modes.url}\n                name=\"url\"\n              />\n            )}\n            label=\"ID/URL\"\n          />\n          <FormControlLabel\n            control={(\n              <Checkbox\n                onChange={handleCheckboxChange}\n                checked={cfg.allowed_search_modes.file}\n                name=\"file\"\n              />\n            )}\n            label=\"File\"\n          />\n        </FormGroup>\n\n        <Button onClick={handleUpdateConfig}>Submit</Button>\n        {isUpdating && <LinearProgress />}\n      </Stack>\n    );\n  }\n\n  return (\n    <Card sx={{ maxWidth: '70vh', mx: 'auto', my: 10 }}>\n      <CardContent>\n        {content}\n      </CardContent>\n    </Card>\n  );\n}\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Grid from '@mui/material/Grid';\nimport { MathJaxContext } from 'better-react-mathjax';\nimport SearchPage from './features/search/SearchPage';\nimport AboutPage from './features/AboutPage';\nimport StoreSnackbar from './features/snackbar/StoreSnackbar';\nimport ConfigsPage from './features/user/ConfigsPage';\n\nconst config = {\n  loader: { load: ['[tex]/html'] },\n  tex: {\n    packages: { '[+]': ['html'] },\n    inlineMath: [\n      ['$', '$'],\n      ['\\\\(', '\\\\)'],\n    ],\n    displayMath: [\n      ['$$', '$$'],\n      ['\\\\[', '\\\\]'],\n    ],\n  },\n};\n\nexport default function App() {\n  return (\n    <BrowserRouter>\n      <Grid component=\"main\" container sx={{ bgcolor: (theme) => theme.palette.background.paper, height: '100%' }}>\n        <Grid item xs={12}>\n          <MathJaxContext config={config}>\n            <Switch>\n              <Route path=\"/about\" component={AboutPage} />\n              <Route path=\"/search\" component={SearchPage} />\n              <Route path=\"/settings\" component={ConfigsPage} />\n              <Route exact path=\"/\" component={SearchPage} />\n            </Switch>\n            <StoreSnackbar />\n          </MathJaxContext>\n        </Grid>\n      </Grid>\n    </BrowserRouter>\n  );\n}\n","import {\n  configureStore, ThunkAction, Action, combineReducers,\n} from '@reduxjs/toolkit';\nimport type { PreloadedState } from '@reduxjs/toolkit';\nimport snackbarReducer from '../features/snackbar/snackbarSlice';\nimport searchReducer from '../features/search/searchSlice';\nimport { splitApi } from './services/index';\n\nconst rootReducer = combineReducers({\n  [splitApi.reducerPath]: splitApi.reducer,\n  snackbar: snackbarReducer,\n  search: searchReducer,\n});\n\nexport const setupStore = (preloadedState?: PreloadedState<RootState>) => configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(splitApi.middleware),\n  preloadedState,\n});\n\nexport type AppDispatch = AppStore['dispatch'];\nexport type AppStore = ReturnType<typeof setupStore>;\nexport type RootState = ReturnType<typeof rootReducer>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","/* eslint-disable no-console */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  // eslint-disable-next-line no-unused-vars\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  // eslint-disable-next-line no-unused-vars\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","/* eslint-disable no-unused-vars */\n// TODO: remove the line above\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport App from './App';\nimport { setupStore } from './app/store';\nimport * as serviceWorker from './serviceWorker';\n\nconst defaultLight = createTheme();\nconst defaultDark = createTheme({ palette: { mode: 'dark' } });\n\nconst store = setupStore();\n\nif (process.env.NODE_ENV === 'test') {\n  // eslint-disable-next-line global-require\n  const { worker } = require('./mocks/browser');\n  worker.start();\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={defaultLight}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}