{"version":3,"sources":["features/Markdown.tsx","features/CodeMarkdown.tsx","features/search/SearchResult.tsx","features/navbar/NavbarSearchInput.tsx","recoil/atoms.ts","assets/SELMA-Logo_code.svg","ColorModeContext.tsx","ThemeSwitch.tsx","recoil/selectors.ts","features/navbar/SystemSettings.tsx","features/navbar/ResultsNavbar.tsx","ResultsPage.tsx","features/navbar/AdvancedSearchDialog.tsx","features/SearchForm.tsx","HomePage.tsx","features/examples/ExamplesList.tsx","features/examples/ExamplesDialog.tsx","features/selfIndexing/SelfIndexingDialog.tsx","layouts/MainLayout.tsx","SeparatedSearchPage.tsx","URLSearchPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["addDelimiters","str","regex","replaceAll","Markdown","props","text","MathJax","dynamic","parse","CodeMarkdown","className","components","code","node","inline","children","properties","match","exec","wrapLongLines","style","materialDark","language","PreTag","String","replace","SearchResult","result","title","body","content","Card","sx","mb","CardContent","Link","variant","underline","href","Search","styled","theme","position","borderRadius","shape","backgroundColor","alpha","palette","primary","marginLeft","spacing","marginRight","width","breakpoints","up","SearchIconWrapper","padding","height","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","color","paddingLeft","transition","transitions","create","NavbarSearchInput","placeholder","value","onChange","inputProps","queryState","atom","key","default","database","model","index","url","equation","mode","page","ColorModeContext","React","createContext","toggleColorMode","ThemeSwitch","Switch","margin","transform","backgroundImage","encodeURIComponent","opacity","left","top","backgroundRepeat","backgroundPosition","baseURL","headers","dataStructureQueryState","selector","get","a","fetch","response","json","dbsState","data","Object","keys","languagesState","emptyExample","name","examplesState","configsState","useExamplesMutations","useRecoilState","setExamples","createExample","example","method","JSON","stringify","newExample","queryTemplate","oldExamples","deleteExample","exampleId","filter","id","useConfigsMutations","setConfigs","updateConfigs","configs","SystemSettings","colorMode","useContext","useState","open","setOpen","configsForm","setConfigsForm","handleCheckboxChange","event","target","checked","values","allowed_search_modes","IconButton","size","edge","onClick","ml","Dialog","fullWidth","maxWidth","onClose","DialogTitle","DialogContent","Stack","Typography","FormGroup","row","FormControlLabel","control","Checkbox","disabled","label","separated","file","direction","DialogActions","Button","HideOnScroll","window","trigger","useScrollTrigger","undefined","Slide","appear","in","TabPanel","other","role","hidden","Box","p","ResultsNavbar","useTheme","tabValue","setTabValue","query","setQuery","useSearchParams","setSearchParams","setText","logoClass","AppBar","elevation","borderBottomStyle","borderBottomWidth","borderBottomColor","Toolbar","paddingRight","to","pathname","textDecoration","src","SelmaLogo","alt","onSubmit","preventDefault","component","type","flexGrow","Tabs","newValue","Tab","ResultsPage","searchParams","results","setResults","isLoading","setIsLoading","endIndex","Number","navigate","useNavigate","useEffect","getResults","URL","mainContent","CircularProgress","Array","isArray","length","slice","map","Pagination","count","search","createSearchParams","toString","mt","bgcolor","minHeight","flexDirection","marginTop","paddingTop","Container","AdvancedSearchDialog","isOpen","dataStructure","languages","useRecoilValue","indexes","setIndexes","models","setModels","databases","handleTextChange","handleChange","handleUpdateConfig","pt","TextField","select","SelectProps","native","db","idx","lang","db_path","db_table_name","db_content_attribute_name","index_path","SearchForm","isDialogOpen","setIsDialogOpen","queryErrors","setQueryErrors","oldQuery","errors","validate","minWidth","fieldset","InputProps","startAdornment","InputAdornment","endAdornment","HomePage","textAlign","fontWeight","ExamplesListItem","isLast","onChooseExample","closeDialog","ListItem","secondaryAction","disablePadding","ListItemButton","newQuery","console","error","ListItemText","Divider","ExamplesList","examples","ExamplesCreateDialog","handleClose","form","setForm","dbs","oldForm","FormControl","FormLabel","RadioGroup","defaultValue","Radio","ExamplesListDialog","ExamplesDialog","setIsOpen","currentDialog","setCurrentDialog","ButtonGroup","mr","COLBERT_NAME","CODETRANS_NAME","PLBART_NAME","KEYWORDS_NAME","emptyIndexRequest","expansionMethods","neuralIndexingMethod","collectionAction","indexingAction","SelfIndexingDialog","activeStep","setActiveStep","isSnackbarVisible","setIsSnackbarVisible","loading","setLoading","success","setSuccess","setError","refreshDataStructure","useRecoilRefresher_UNSTABLE","steps","handleChangeUrl","repoName","parts","split","lastPart","endsWith","extractRepoName","handleChangeExpansionmethods","handleChangeCollectionAction","handleReset","handleFinish","then","catch","isLastStep","getSelectedExpansionMethods","selectedExpansionMethods","entries","entry","push","join","buttonSx","green","PaperProps","Stepper","alternativeLabel","Step","StepLabel","step","helperText","Alert","severity","Error","FormStep","prevActiveStep","m","isNextDisabled","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","MainLayout","isAllowed","marginBottom","SeparatedSearchPage","URLSearchPage","mathJaxConfig","loader","load","tex","packages","inlineMath","displayMath","Fallback","App","setMode","useMemo","prevMode","newMode","localStorage","setItem","createTheme","existingPreference","getItem","Provider","ThemeProvider","Suspense","fallback","MathJaxContext","config","element","path","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a0a99a9b.chunk.js","sourcesContent":["import React from 'react';\nimport parse from 'html-react-parser';\nimport { MathJax } from 'better-react-mathjax';\n\nexport function addDelimiters(str: string): string {\n  const regex = /(?<open><span class=\"math-container\" id=\"[a-z0-9]+\">)(?<formel>.*?)(?=<\\/span>|$)(?<close><\\/span>)/g;\n  str = str.replaceAll(regex, '$$$<formel>$$');\n  return str;\n}\ninterface MarkdownProps {\n  text: string\n}\n\nexport default function Markdown(props: MarkdownProps) {\n  const { text } = props;\n\n  return (\n    <>\n      <MathJax dynamic>\n        {parse(addDelimiters(text))}\n      </MathJax>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { materialDark } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nexport function addDelimiters(str: string): string {\n  return `\\`\\`\\`java\\n${str}\\n\\`\\`\\``;\n}\n\ninterface CodeMarkdownProps {\n  text: string\n}\n\nexport default function CodeMarkdown(props: CodeMarkdownProps) {\n  const { text } = props;\n\n  return (\n    <ReactMarkdown\n      className=\"code-block\"\n      components={{\n        code({\n          node, inline, className, children, ...properties\n        }) {\n          const match = /language-(\\w+)/.exec(className || '');\n          return !inline && match ? (\n            <SyntaxHighlighter\n              wrapLongLines\n              style={materialDark}\n              language={match[1]}\n              PreTag=\"div\"\n              {...properties}\n            >\n              {String(children).replace(/\\n$/, '')}\n            </SyntaxHighlighter>\n          ) : (\n            <code className={className} {...properties}>\n              {children}\n            </code>\n          );\n        },\n      }}\n    >\n      {addDelimiters(text)}\n    </ReactMarkdown>\n  );\n}\n","import React from 'react';\nimport Card from '@mui/material/Card';\nimport Link from '@mui/material/Link';\nimport CardContent from '@mui/material/CardContent';\nimport Markdown from '../Markdown';\nimport CodeMarkdown from '../CodeMarkdown';\n\nexport interface Result {\n  acceptedAnswerId?: number | null;\n  body: string;\n  id: number;\n  parentId?: number;\n  postTypeId?: number;\n  title: string;\n  tags: string | null;\n  cut: boolean;\n  relevantSentence: string;\n  language?: string;\n  comment?: string;\n  url?: string;\n}\n\ninterface SearchResultProps {\n  result: Result;\n}\n\nexport default function SearchResult(props: SearchResultProps) {\n  const { result } = props;\n  const {\n    title, body, language,\n  } = result;\n\n  const content = (language === 'java')\n    ? <CodeMarkdown text={body} />\n    : <Markdown text={body} />;\n\n  return (\n    <>\n      <Card sx={{ mb: 4 }}>\n        <CardContent>\n          <Link\n            variant=\"h6\"\n            underline=\"hover\"\n            href=\"#todo\"\n          >\n            {title}\n          </Link>\n          {content}\n        </CardContent>\n      </Card>\n    </>\n  );\n}\n","import React from 'react';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { styled, alpha } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\n\nconst Search = styled('div')(({ theme }) => ({\n  position: 'relative',\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.text.primary, 0.25),\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.text.primary, 0.45),\n  },\n  marginLeft: theme.spacing(2),\n  marginRight: theme.spacing(2),\n  width: '100%',\n  [theme.breakpoints.up('sm')]: {\n    marginLeft: theme.spacing(1),\n    width: 'auto',\n  },\n}));\n\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: '100%',\n  position: 'absolute',\n  pointerEvents: 'none',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}));\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: 'inherit',\n  '& .MuiInputBase-input': {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '15ch',\n      '&:focus': {\n        width: '40ch',\n      },\n    },\n  },\n}));\n\ninterface NavbarSearchInputProps {\n  placeholder: string;\n  value: string;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void\n}\n\nexport default function NavbarSearchInput(props: NavbarSearchInputProps) {\n  const { placeholder, value, onChange } = props;\n  return (\n    <Search>\n      <SearchIconWrapper>\n        <SearchIcon />\n      </SearchIconWrapper>\n      <StyledInputBase\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        inputProps={{ 'aria-label': 'search' }}\n      />\n    </Search>\n  );\n}\n","import { atom } from 'recoil';\n\nexport type QueryMode = 'default' | 'separated' | 'url' | 'file'\nexport interface QueryState {\n  database: string;\n  model: string;\n  index: string;\n  language: string;\n  text?: string;\n  url?: string;\n  code?: string;\n  equation?: string;\n  mode: QueryMode;\n  page: number;\n}\n\nexport const defaultQuery: QueryState = {\n  database: '',\n  model: '',\n  index: '',\n  language: 'english',\n  text: '',\n  url: '',\n  code: '',\n  equation: '',\n  mode: 'default',\n  page: 1,\n};\n\nexport const queryState = atom<QueryState>({\n  key: 'query',\n  default: defaultQuery,\n});\n\nexport interface QueryErrors {\n  text?: string;\n  database?: string;\n  model?: string;\n  index?: string;\n}\n","export default __webpack_public_path__ + \"static/media/SELMA-Logo_code.d94e08e5.svg\";","import React from 'react';\n\nexport const ColorModeContext = React.createContext({ toggleColorMode: () => { } });\n","import { styled } from '@mui/material/styles';\nimport Switch from '@mui/material/Switch';\n\nexport const ThemeSwitch = styled(Switch)(({ theme }) => ({\n  width: 62,\n  height: 34,\n  padding: 7,\n  '& .MuiSwitch-switchBase': {\n    margin: 1,\n    padding: 0,\n    transform: 'translateX(6px)',\n    '&.Mui-checked': {\n      color: '#fff',\n      transform: 'translateX(22px)',\n      '& .MuiSwitch-thumb:before': {\n        backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\n          '#fff',\n        )}\" d=\"M4.2 2.5l-.7 1.8-1.8.7 1.8.7.7 1.8.6-1.8L6.7 5l-1.9-.7-.6-1.8zm15 8.3a6.7 6.7 0 11-6.6-6.6 5.8 5.8 0 006.6 6.6z\"/></svg>')`,\n      },\n      '& + .MuiSwitch-track': {\n        opacity: 1,\n        backgroundColor: theme.palette.mode === 'dark' ? '#8796A5' : '#aab4be',\n      },\n    },\n  },\n  '& .MuiSwitch-thumb': {\n    backgroundColor: theme.palette.mode === 'dark' ? '#003892' : '#001e3c',\n    width: 32,\n    height: 32,\n    '&:before': {\n      content: \"''\",\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      left: 0,\n      top: 0,\n      backgroundRepeat: 'no-repeat',\n      backgroundPosition: 'center',\n      backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\n        '#fff',\n      )}\" d=\"M9.305 1.667V3.75h1.389V1.667h-1.39zm-4.707 1.95l-.982.982L5.09 6.072l.982-.982-1.473-1.473zm10.802 0L13.927 5.09l.982.982 1.473-1.473-.982-.982zM10 5.139a4.872 4.872 0 00-4.862 4.86A4.872 4.872 0 0010 14.862 4.872 4.872 0 0014.86 10 4.872 4.872 0 0010 5.139zm0 1.389A3.462 3.462 0 0113.471 10a3.462 3.462 0 01-3.473 3.472A3.462 3.462 0 016.527 10 3.462 3.462 0 0110 6.528zM1.665 9.305v1.39h2.083v-1.39H1.666zm14.583 0v1.39h2.084v-1.39h-2.084zM5.09 13.928L3.616 15.4l.982.982 1.473-1.473-.982-.982zm9.82 0l-.982.982 1.473 1.473.982-.982-1.473-1.473zM9.305 16.25v2.083h1.389V16.25h-1.39z\"/></svg>')`,\n    },\n  },\n  '& .MuiSwitch-track': {\n    opacity: 1,\n    backgroundColor: theme.palette.mode === 'dark' ? '#8796A5' : '#aab4be',\n    borderRadius: 20 / 2,\n  },\n}));\n","import { atom, selector, useRecoilState } from 'recoil';\nimport { QueryMode, queryState } from './atoms';\n\nexport const baseURL = '/api/v1';\nconst headers = { 'Content-Type': 'application/json' };\n\nexport const dataStructureQueryState = selector({\n  key: 'dataStructure',\n  get: async () => {\n    const response = await fetch(`${baseURL}/data-structure`);\n    return response.json();\n  },\n});\n\nexport const dbsState = selector<string[]>({\n  key: 'dbs',\n  get: ({ get }) => {\n    const data = get(dataStructureQueryState);\n    return Object.keys(data);\n  },\n});\n\nexport const filteredModelsState = selector<string[]>({\n  key: 'filteredModels',\n  get: ({ get }) => {\n    const { database } = get(queryState);\n    const data = get(dataStructureQueryState);\n    if (data[database]) {\n      return Object.keys(data[database]);\n    }\n    return [];\n  },\n});\n\nexport const filteredIndexesState = selector<string[]>({\n  key: 'filteredIndexes',\n  get: ({ get }) => {\n    const data = get(dataStructureQueryState);\n    const { database, model } = get(queryState);\n    if (data[database] && data[database][model]) {\n      return data[database][model];\n    }\n    return [];\n  },\n});\n\nexport const languagesState = selector<string[]>({\n  key: 'languages',\n  get: () => ['english'],\n});\n\nexport interface Config {\n  db_path: string;\n  db_table_name: string;\n  db_content_attribute_name: string;\n  index_path: string;\n  allowed_search_modes: {\n    default: boolean,\n    separated: boolean,\n    url: boolean,\n    file: boolean,\n  },\n  expansion_methods: { [key: string]: string },\n}\n\nexport const emptyConfig: Config = {\n  db_path: '',\n  db_table_name: '',\n  db_content_attribute_name: '',\n  index_path: '',\n  allowed_search_modes: {\n    default: true, separated: true, url: true, file: true,\n  },\n  expansion_methods: {},\n};\n\nexport const emptyExample: Example = {\n  name: '',\n  model: '',\n  mode: 'default',\n  language: '',\n  text: '',\n  code: '',\n  equation: '',\n  url: '',\n  database: '',\n  index: '',\n};\n\nexport interface Example {\n  id?: number;\n  name: string;\n  model: string;\n  mode: QueryMode;\n  language: string;\n  text?: string;\n  code?: string;\n  equation?: string;\n  url?: string;\n  database: string;\n  index: string;\n}\n\nexport const examplesState = atom<Example[]>({\n  key: 'examples',\n  default: selector<Example[]>({\n    key: 'examplesLoader',\n    get: async () => {\n      const response = await fetch(`${baseURL}/query-templates`);\n      return response.json();\n    },\n  }),\n});\n\nexport const configsState = atom<Config>({\n  key: 'configs',\n  default: selector<Config>({\n    key: 'configsLoader',\n    get: async () => {\n      const response = await fetch(`${baseURL}/configs`);\n      const data = await response.json();\n      return data;\n    },\n  }),\n});\n\nexport function useExamplesMutations() {\n  const [, setExamples] = useRecoilState(examplesState);\n\n  const createExample = async (example: Example) => {\n    const response = await fetch(`${baseURL}/query-templates`,\n      {\n        method: 'POST',\n        body: JSON.stringify(example),\n        headers,\n      });\n    const data = await response.json();\n    const newExample = data.queryTemplate;\n    setExamples((oldExamples) => [...oldExamples, newExample]);\n  };\n\n  const deleteExample = async (exampleId: number) => {\n    await fetch(`${baseURL}/query-templates/${exampleId}`,\n      {\n        method: 'DELETE',\n        headers,\n      });\n    setExamples((oldExamples) => oldExamples.filter((example) => example.id !== exampleId));\n  };\n\n  return { createExample, deleteExample };\n}\n\nexport function useConfigsMutations() {\n  const [, setConfigs] = useRecoilState(configsState);\n\n  const updateConfigs = async (configs: Config) => {\n    const response = await fetch(`${baseURL}/configs`,\n      {\n        method: 'POST',\n        body: JSON.stringify(configs),\n        headers,\n      });\n    const data = await response.json();\n    setConfigs(data);\n  };\n\n  return { updateConfigs };\n}\n","import React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport IconButton from '@mui/material/IconButton';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { useRecoilState } from 'recoil';\nimport { ColorModeContext } from '../../ColorModeContext';\nimport { ThemeSwitch } from '../../ThemeSwitch';\nimport { Config, configsState, useConfigsMutations } from '../../recoil/selectors';\n\nexport default function SystemSettings() {\n  const colorMode = React.useContext(ColorModeContext);\n  const { updateConfigs } = useConfigsMutations();\n  const [open, setOpen] = React.useState(false);\n  const [configs, setConfigs] = useRecoilState(configsState);\n  const [configsForm, setConfigsForm] = React.useState<Config>(configs);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleCancel = () => {\n    setOpen(false);\n    setConfigsForm(configs);\n  };\n\n  const handleApply = () => {\n    setOpen(false);\n    updateConfigs(configsForm);\n    setConfigs(configsForm);\n  };\n\n  const handleCheckboxChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = event.target;\n    setConfigsForm((values: Config) => ({\n      ...values,\n      allowed_search_modes: {\n        ...values.allowed_search_modes, [name]: checked,\n      },\n    }));\n  };\n\n  return (\n    <>\n      <IconButton\n        size=\"large\"\n        edge=\"end\"\n        aria-haspopup=\"true\"\n        onClick={() => setOpen(true)}\n        sx={{ ml: 2 }}\n      >\n        <SettingsIcon />\n      </IconButton>\n      <Dialog\n        fullWidth\n        maxWidth=\"sm\"\n        open={open}\n        onClose={handleClose}\n      >\n        <DialogTitle>Settings</DialogTitle>\n        <DialogContent>\n          <Stack spacing={2}>\n            <Typography variant=\"subtitle1\">Allowed search modes:</Typography>\n            <FormGroup row sx={{ justifyContent: 'space-evenly' }}>\n              <FormControlLabel\n                control={(\n                  <Checkbox\n                    disabled\n                    onChange={handleCheckboxChange}\n                    checked\n                    name=\"default\"\n                    inputProps={{ 'aria-label': 'allow default search' }}\n                  />\n                )}\n                label=\"Default\"\n              />\n              <FormControlLabel\n                control={(\n                  <Checkbox\n                    onChange={handleCheckboxChange}\n                    checked={configsForm.allowed_search_modes.separated}\n                    name=\"separated\"\n                    inputProps={{ 'aria-label': 'allow separated search' }}\n                  />\n                )}\n                label=\"Separated\"\n              />\n              <FormControlLabel\n                control={(\n                  <Checkbox\n                    onChange={handleCheckboxChange}\n                    checked={configsForm.allowed_search_modes.url}\n                    name=\"url\"\n                    inputProps={{ 'aria-label': 'allow url or id search' }}\n                  />\n                )}\n                label=\"URL or ID\"\n              />\n              <FormControlLabel\n                control={(\n                  <Checkbox\n                    onChange={handleCheckboxChange}\n                    checked={configsForm.allowed_search_modes.file}\n                    name=\"file\"\n                    inputProps={{ 'aria-label': 'allow file search' }}\n                  />\n                )}\n                label=\"File\"\n              />\n            </FormGroup>\n            <Typography variant=\"subtitle1\">Theme:</Typography>\n            <Stack direction=\"row\" spacing={1} justifyContent=\"center\" alignItems=\"center\">\n              <ThemeSwitch onClick={colorMode.toggleColorMode} />\n            </Stack>\n          </Stack>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCancel}>Cancel</Button>\n          <Button onClick={handleApply}>Apply</Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","import React, { FormEvent } from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Tabs from '@mui/material/Tabs/Tabs';\nimport Tab from '@mui/material/Tab/Tab';\nimport Button from '@mui/material/Button/Button';\nimport useScrollTrigger from '@mui/material/useScrollTrigger/useScrollTrigger';\nimport Slide from '@mui/material/Slide/Slide';\nimport Box from '@mui/material/Box/Box';\nimport { useRecoilState } from 'recoil';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { useTheme } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport NavbarSearchInput from './NavbarSearchInput';\nimport { QueryMode, queryState } from '../../recoil/atoms';\nimport SelmaLogo from '../../assets/SELMA-Logo_code.svg';\nimport SystemSettings from './SystemSettings';\n\ninterface HideOnScrollProps {\n  // TODO: remove this code\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window?: () => Window;\n  children: React.ReactElement;\n}\n\nfunction HideOnScroll(props: HideOnScrollProps) {\n  const { children, window } = props;\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({\n    target: window ? window() : undefined,\n  });\n\n  return (\n    <Slide appear={false} direction=\"down\" in={!trigger}>\n      {children}\n    </Slide>\n  );\n}\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  dir?: string;\n  index: number;\n  value: number;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const {\n    children, value, index, ...other\n  } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nexport default function ResultsNavbar() {\n  const theme = useTheme();\n  const [tabValue, setTabValue] = React.useState<number>(0);\n  const [query, setQuery] = useRecoilState(queryState);\n  const [, setSearchParams] = useSearchParams();\n  // TODO: review non-null assertion operator (aka !)\n  const [text, setText] = React.useState(query.text!);\n\n  const logoClass = theme.palette.mode === 'light' ? 'dark-logo' : 'light-logo';\n\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\n    const mapping: { [key: number]: QueryMode } = {\n      0: 'default',\n      1: 'separated',\n      2: 'url',\n      3: 'file',\n    };\n    const mode = mapping[newValue];\n    setTabValue(newValue);\n    setQuery({ ...query, mode });\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n    setText(value);\n  };\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n    setSearchParams({\n      text,\n      database: query.database,\n      model: query.model,\n      index: query.index,\n      language: query.language,\n      page: '1',\n    });\n  };\n\n  return (\n    <>\n      <HideOnScroll>\n        <AppBar\n          position=\"fixed\"\n          elevation={0}\n          sx={{\n            borderBottomStyle: 'solid',\n            borderBottomWidth: '1px',\n            borderBottomColor: 'secondary.main',\n          }}\n        >\n\n          <Toolbar>\n            <Box sx={{\n              display: 'block',\n              height: '32px',\n              width: '32px',\n              paddingRight: '64px',\n            }}\n            >\n              <Link to={{ pathname: '/' }} style={{ textDecoration: 'none', color: '#ffffff' }}>\n                <Stack direction=\"row\">\n                  <img\n                    className={logoClass}\n                    src={SelmaLogo}\n                    alt=\"Selma retrieval system\"\n\n                  />\n                  <Typography variant=\"h6\" sx={{ ml: 2 }}>SELMA</Typography>\n                </Stack>\n              </Link>\n            </Box>\n            <TabPanel value={tabValue} index={0}>\n\n              <Box\n                onSubmit={handleSubmit}\n                component=\"form\"\n                sx={{ display: 'flex', alignItems: 'center' }}\n              >\n                <NavbarSearchInput\n                  value={text!} // TODO: review non-null assertion operator (aka !)\n                  onChange={handleChange}\n                  placeholder=\"Search\"\n                />\n                <Button type=\"submit\" variant=\"contained\">Go</Button>\n              </Box>\n\n            </TabPanel>\n\n            <Box sx={{ flexGrow: 1 }} />\n\n            <SystemSettings />\n          </Toolbar>\n\n          <Toolbar variant=\"dense\">\n            <Tabs value={tabValue} onChange={handleTabChange} style={{ height: '32px' }}>\n              <Tab label=\"Default\" />\n            </Tabs>\n          </Toolbar>\n\n        </AppBar>\n      </HideOnScroll>\n    </>\n  );\n}\n","import React from 'react';\nimport Box from '@mui/material/Box';\nimport { createSearchParams, useNavigate, useSearchParams } from 'react-router-dom';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Container from '@mui/material/Container';\nimport Pagination from '@mui/material/Pagination/Pagination';\nimport { useRecoilState } from 'recoil';\nimport { Typography } from '@mui/material';\nimport SearchResult from './features/search/SearchResult';\nimport ResultsNavbar from './features/navbar/ResultsNavbar';\nimport { queryState } from './recoil/atoms';\n\nexport interface Result {\n  acceptedAnswerId?: number | null;\n  body: string;\n  id: number;\n  parentId?: number;\n  postTypeId?: number;\n  title: string;\n  tags: string | null;\n  cut: boolean;\n  relevantSentence: string;\n  language?: string;\n  comment?: string;\n  url?: string;\n}\n\nexport default function ResultsPage() {\n  const [searchParams] = useSearchParams();\n  const [results, setResults] = React.useState<Result[] | undefined>(undefined);\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [endIndex] = React.useState(10);\n  const [query, setQuery] = useRecoilState(queryState);\n  const page = Number(searchParams.get('page')) as number;\n  const text = searchParams.get('text') as string;\n  const database = searchParams.get('database') as string;\n  const model = searchParams.get('model') as string;\n  const index = searchParams.get('index') as string;\n  const navigate = useNavigate();\n\n  React.useEffect(() => {\n    setQuery({\n      ...query,\n      ...{\n        text, database, model, index, page,\n      },\n    });\n\n    const getResults = async () => {\n      const URL = '/api/v1/search?'\n        + `text=${text}&`\n        + `database=${database}&`\n        + `model=${model}&`\n        + `index=${index}&`\n        + `page=${page}&`\n        + 'model-language=english';\n\n      const response = await fetch(URL);\n      const data = await response.json();\n\n      setResults(data.results);\n      setIsLoading(false);\n    };\n    setIsLoading(true);\n    getResults();\n  }, [searchParams]);\n\n  const handlePageChange = (event: React.ChangeEvent<unknown>, value: number) => {\n    navigate({\n      search: createSearchParams({\n        text, // TODO: review non-null assertion operator (aka !)\n        database,\n        model,\n        index,\n        language: 'english',\n        page: `${value}`,\n      }).toString(),\n    });\n  };\n\n  let mainContent = <>TODO: Error</>;\n\n  if (isLoading) {\n    mainContent = (\n      <Box sx={{\n        display: 'flex',\n        justifyContent: 'center',\n      }}\n      >\n        <CircularProgress />\n      </Box>\n    );\n  } else if (Array.isArray(results)) {\n    if (results.length === 0) {\n      mainContent = <Typography variant=\"h2\" color=\"text.primary\">😭 0 Results</Typography>;\n    } else {\n      mainContent = (\n        <>\n          {results!.slice(0, endIndex).map(\n            (result) => <SearchResult key={result.id} result={result} />,\n          )}\n          <Box sx={{ display: 'flex', justifyContent: 'center' }}>\n            <Pagination\n              color=\"secondary\"\n              page={page}\n              count={10}\n              onChange={handlePageChange}\n              sx={{ mt: 4, mb: 8 }}\n            />\n          </Box>\n        </>\n      );\n    }\n  }\n\n  return (\n    <Box sx={{\n      display: 'flex',\n      justifyContent: 'center',\n      bgcolor: 'background.paper',\n      minHeight: '100%',\n    }}\n    >\n      <ResultsNavbar />\n      <main style={{\n        maxWidth: 'sm',\n        display: 'flex',\n        flexDirection: 'column',\n        marginTop: '135px',\n        paddingTop: '12px',\n      }}\n      >\n        <Container\n          maxWidth=\"md\"\n          sx={{\n            display: 'flex', justifyContent: 'center', flexDirection: 'column', flexGrow: 1,\n          }}\n        >\n          {mainContent}\n        </Container>\n      </main>\n    </Box>\n  );\n}\n","/* eslint-disable jsx-a11y/control-has-associated-label */\n/* eslint-disable no-unused-vars */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Stack from '@mui/material/Stack';\nimport TextField from '@mui/material/TextField';\nimport React from 'react';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport { QueryErrors, queryState } from '../../recoil/atoms';\nimport {\n  Config,\n  configsState,\n  dbsState,\n  languagesState,\n  useConfigsMutations,\n} from '../../recoil/selectors';\n\nexport interface AdvancedSearchDialogProps {\n  isOpen: boolean;\n  onClose: () => void;\n  dataStructure: any;\n  errors: QueryErrors;\n}\n\nexport default function AdvancedSearchDialog(props: AdvancedSearchDialogProps) {\n  const {\n    onClose, isOpen, dataStructure,\n  } = props;\n  const languages = useRecoilValue(languagesState);\n  const [configs, setConfigs] = useRecoilState(configsState);\n  const [configsForm, setConfigsForm] = React.useState<Config>(configs);\n  const { updateConfigs } = useConfigsMutations();\n  const [indexes, setIndexes] = React.useState<string[]>([]);\n  const [models, setModels] = React.useState<string[]>([]);\n  const [query, setQuery] = useRecoilState(queryState);\n  const databases = useRecoilValue(dbsState);\n\n  React.useEffect(() => {\n    // filter models\n    if (query.database && dataStructure[query.database]) {\n      setModels(Object.keys(dataStructure[query.database]));\n    } else {\n      setModels([]);\n    }\n    // filter indexes\n    if (dataStructure[query.database] && dataStructure[query.database][query.model]) {\n      setIndexes(dataStructure[query.database][query.model]);\n    } else {\n      setIndexes([]);\n    }\n  }, [query]);\n\n  const handleTextChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n    setConfigsForm((values: Config) => ({ ...values, [name]: value }));\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n    setQuery({ ...query, [name]: value });\n  };\n\n  const handleUpdateConfig = async () => {\n    updateConfigs(configsForm);\n    setConfigs(configsForm);\n    onClose();\n  };\n\n  return (\n    <Dialog\n      maxWidth=\"sm\"\n      fullWidth\n      open={isOpen}\n      onClose={() => onClose()}\n    >\n      <DialogTitle>\n        Advanced Search Settings\n      </DialogTitle>\n      <DialogContent>\n\n        <Stack sx={{ pt: 2 }} spacing={2}>\n          <TextField\n            label=\"Database\"\n            name=\"database\"\n            value={query.database}\n            onChange={handleChange}\n            select\n            SelectProps={{\n              native: true,\n            }}\n          >\n            <option value=\"\" />\n            {databases.map((db) => <option key={db} value={db}>{db}</option>)}\n          </TextField>\n          <TextField\n            label=\"Model\"\n            name=\"model\"\n            value={query.model}\n            onChange={handleChange}\n            select\n            SelectProps={{\n              native: true,\n            }}\n          >\n            <option value=\"\" />\n            {models.map((model) => <option key={model} value={model}>{model}</option>)}\n          </TextField>\n          <TextField\n            label=\"Index\"\n            name=\"index\"\n            value={query.index}\n            onChange={handleChange}\n            select\n            SelectProps={{\n              native: true,\n            }}\n          >\n            <option value=\"\" />\n            {indexes.map((idx) => <option key={idx} value={idx}>{idx}</option>)}\n          </TextField>\n          <TextField\n            label=\"Language\"\n            name=\"language\"\n            value={query.language}\n            onChange={handleChange}\n            disabled\n            select\n            SelectProps={{\n              native: true,\n            }}\n          >\n            <option value=\"\" />\n            {languages.map((lang) => <option key={lang} value={lang}>{lang}</option>)}\n          </TextField>\n\n          <TextField\n            onChange={handleTextChange}\n            label=\"DATABASE_PATH\"\n            variant=\"filled\"\n            name=\"db_path\"\n            value={configsForm.db_path}\n          />\n\n          <TextField\n            onChange={handleTextChange}\n            label=\"DB_TABLE_NAME\"\n            variant=\"filled\"\n            name=\"db_table_name\"\n            value={configsForm.db_table_name}\n          />\n\n          <TextField\n            onChange={handleTextChange}\n            label=\"DB_CONTENT_ATTRIBUTE_NAME\"\n            variant=\"filled\"\n            name=\"db_content_attribute_name\"\n            value={configsForm.db_content_attribute_name}\n          />\n\n          <TextField\n            onChange={handleTextChange}\n            label=\"INDEX_PATH\"\n            variant=\"filled\"\n            name=\"index_path\"\n            value={configsForm.index_path}\n          />\n\n          <Button onClick={handleUpdateConfig}>Apply</Button>\n        </Stack>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport SearchIcon from '@mui/icons-material/Search';\nimport TuneIcon from '@mui/icons-material/Tune';\nimport IconButton from '@mui/material/IconButton';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport Stack from '@mui/material/Stack';\nimport TextField from '@mui/material/TextField';\nimport React, { FormEvent } from 'react';\nimport { createSearchParams, useNavigate } from 'react-router-dom';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport { QueryErrors, queryState } from '../recoil/atoms';\nimport { dataStructureQueryState } from '../recoil/selectors';\nimport AdvancedSearchDialog from './navbar/AdvancedSearchDialog';\n\nexport default function SearchForm() {\n  const navigate = useNavigate();\n  const [query, setQuery] = useRecoilState(queryState);\n  const dataStructure = useRecoilValue(dataStructureQueryState);\n  const [models, setModels] = React.useState<string[]>([]);\n  const [isDialogOpen, setIsDialogOpen] = React.useState(false);\n  const [queryErrors, setQueryErrors] = React.useState<QueryErrors>({});\n\n  React.useEffect(() => {\n    const database = Object.keys(dataStructure)[0];\n    const model = Object.keys(dataStructure[database])[0];\n    const index = dataStructure[database][model][0];\n\n    setQuery((oldQuery) => ({\n      ...oldQuery,\n      database,\n      model,\n      index,\n    }));\n  }, []);\n\n  React.useEffect(() => {\n    // filter models\n    if (query.database && dataStructure[query.database]) {\n      setModels(Object.keys(dataStructure[query.database]));\n    } else {\n      setModels([]);\n    }\n  }, [query]);\n\n  const validate = () => {\n    const errors: QueryErrors = {};\n    if (query.mode === 'default' && query.text === '') {\n      errors.text = 'Text is required in default search mode';\n    }\n    if (query.database === '') {\n      errors.database = 'Database is required';\n    }\n    if (query.model === '') {\n      errors.model = 'Model is required';\n    }\n    // TODO: implement logic to determine wheter index is required\n    const isIndexRequired = true;\n    if (query.index === '' && isIndexRequired) {\n      errors.index = 'This model requires an index';\n    }\n    return errors;\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n    setQuery({ ...query, [name]: value });\n  };\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n    const errors = validate();\n    setQueryErrors(errors);\n\n    // If there is no error, then form can be submitted\n    if (Object.keys(errors).length === 0) {\n      navigate({\n        pathname: 'results',\n        search: createSearchParams({\n          text: query.text!, // TODO: review non-null assertion operator (aka !)\n          database: query.database,\n          model: query.model,\n          index: query.index,\n          language: query.language,\n          page: '1',\n        }).toString(),\n      });\n    }\n  };\n\n  return (\n    <Stack\n      onSubmit={handleSubmit}\n      direction=\"row\"\n      component=\"form\"\n      role=\"search\"\n      justifyContent=\"center\"\n    >\n      <TextField\n        select\n        value={query.model}\n        onChange={handleChange}\n        label=\"Model\"\n        name=\"model\"\n        SelectProps={{\n          native: true,\n        }}\n        sx={{\n          flexGrow: 1,\n          minWidth: '192px',\n          fieldset: {\n            borderRadius: '4px 0 0 4px',\n          },\n        }}\n      >\n        <option value=\"\" />\n        {models.map((model) => <option value={model} key={model}>{model}</option>)}\n      </TextField>\n      <TextField\n        label=\"Query\"\n        name=\"text\"\n        value={query.text}\n        onChange={handleChange}\n        sx={{\n          flexGrow: 5,\n          '.MuiInputBase-root': {\n            paddingRight: '8px',\n          },\n          fieldset: {\n            borderRadius: '0 4px 4px 0',\n            marginLeft: '-1px',\n          },\n        }}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <SearchIcon />\n            </InputAdornment>\n          ),\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <IconButton\n                onClick={() => setIsDialogOpen(true)}\n                aria-label=\"advanced search\"\n                size=\"large\"\n              >\n                <TuneIcon />\n              </IconButton>\n            </InputAdornment>\n          ),\n        }}\n      />\n      <AdvancedSearchDialog\n        errors={queryErrors}\n        dataStructure={dataStructure}\n        isOpen={isDialogOpen}\n        onClose={() => setIsDialogOpen(false)}\n      />\n    </Stack>\n  );\n}\n","import React from 'react';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport { useTheme } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\nimport SelmaLogo from './assets/SELMA-Logo_code.svg';\nimport SearchForm from './features/SearchForm';\n\nexport default function HomePage() {\n  const theme = useTheme();\n\n  const logoClass = theme.palette.mode === 'light' ? 'dark-logo' : 'light-logo';\n\n  return (\n    <Box sx={{\n      textAlign: 'center',\n      minWidth: '80%',\n    }}\n    >\n      <Stack\n        direction=\"row\"\n        sx={{\n          justifyContent: 'center',\n          alignItems: 'center',\n          mb: 6,\n        }}\n      >\n        <img\n          className={logoClass}\n          src={SelmaLogo}\n          alt=\"Selma retrieval system\"\n        />\n        <Typography\n          variant=\"h2\"\n          sx={{\n            color: 'text.primary',\n            fontWeight: 800,\n          }}\n        >\n          SELMA\n        </Typography>\n      </Stack>\n\n      <SearchForm />\n    </Box>\n  );\n}\n","import React from 'react';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport { SetterOrUpdater, useRecoilState, useRecoilValue } from 'recoil';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { examplesState, Example, useExamplesMutations } from '../../recoil/selectors';\nimport { QueryState, queryState } from '../../recoil/atoms';\n\ninterface ExamplesListItemProps {\n  example: Example;\n  isLast: boolean;\n  onChooseExample: SetterOrUpdater<QueryState>;\n  onClose: () => void;\n}\n\nfunction ExamplesListItem(props: ExamplesListItemProps) {\n  const {\n    example: {\n      id,\n      name,\n      text,\n      url,\n      database,\n      model,\n      index,\n      code,\n      language,\n      equation,\n      mode,\n    },\n    isLast,\n    onChooseExample: setQuery,\n    onClose: closeDialog,\n  } = props;\n  const { deleteExample } = useExamplesMutations();\n\n  const handleChooseTemplate = () => {\n    const newQuery: QueryState = {\n      database,\n      model,\n      index,\n      language,\n      mode,\n      page: 1,\n    };\n\n    if (mode === 'default') {\n      newQuery.text = text;\n    } else if (mode === 'separated') {\n      newQuery.code = code;\n      newQuery.equation = equation;\n    } else if (mode === 'url') {\n      newQuery.url = url;\n    } else {\n      console.error('TODO');\n    }\n\n    setQuery(newQuery);\n    closeDialog();\n  };\n\n  const handleDelete = () => {\n    // TODO: review non-null assertion operator (aka !)\n    deleteExample(id!);\n    // TODO: Implement error handling in case example cannot be deleted\n    closeDialog();\n  };\n\n  return (\n    <>\n      <ListItem\n        key={id}\n        alignItems=\"flex-start\"\n        secondaryAction={(\n          <IconButton\n            edge=\"end\"\n            aria-label=\"delete\"\n            onClick={handleDelete}\n          >\n            <DeleteIcon />\n          </IconButton>\n        )}\n        disablePadding\n      >\n        <ListItemButton onClick={handleChooseTemplate}>\n          <ListItemText\n            primary={name}\n          />\n        </ListItemButton>\n      </ListItem>\n      {!isLast && <Divider />}\n    </>\n  );\n}\n\ninterface ExamplesListProps {\n  onClose: () => void;\n}\n\nexport default function ExamplesList(props: ExamplesListProps) {\n  const { onClose } = props;\n  const examples = useRecoilValue(examplesState);\n  const [, setQuery] = useRecoilState(queryState);\n\n  if (examples.length === 0) {\n    return (\n      <Box textAlign=\"center\">\n        <Typography variant=\"subtitle1\">\n          There are no query examples available, please create one.\n        </Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <>\n      {examples.map((example, index) => (\n        <ExamplesListItem\n          onClose={onClose}\n          key={example.id}\n          onChooseExample={setQuery}\n          example={example}\n          isLast={index === examples.length - 1}\n        />\n      ))}\n    </>\n  );\n}\n","/* eslint-disable no-unreachable */\n/* eslint-disable jsx-a11y/control-has-associated-label */\n/* eslint-disable no-unused-vars */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport AddIcon from '@mui/icons-material/Add';\nimport Stack from '@mui/material/Stack';\nimport TextField from '@mui/material/TextField';\nimport { useRecoilValue } from 'recoil';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Radio from '@mui/material/Radio';\nimport {\n  dataStructureQueryState,\n  dbsState, emptyExample, Example, useExamplesMutations,\n} from '../../recoil/selectors';\nimport ExamplesList from './ExamplesList';\n\ninterface ExamplesDialogProps {\n  onClose: () => void;\n  isOpen: boolean;\n}\n\nfunction ExamplesCreateDialog(props: ExamplesDialogProps) {\n  const { isOpen, onClose: handleClose } = props;\n  const [form, setForm] = React.useState<Example>(emptyExample);\n  const { createExample } = useExamplesMutations();\n  const dbs = useRecoilValue(dbsState);\n  const dataStructure = useRecoilValue(dataStructureQueryState);\n  const [models, setModels] = React.useState<string[]>([]);\n  const [indexes, setIndexes] = React.useState<string[]>([]);\n\n  React.useEffect(() => {\n    // filter models\n    if (form.database && dataStructure[form.database]) {\n      setModels(Object.keys(dataStructure[form.database]));\n    } else {\n      setModels([]);\n    }\n\n    // filter indexes\n    if (dataStructure[form.database] && dataStructure[form.database][form.model]) {\n      setIndexes(dataStructure[form.database][form.model]);\n    } else {\n      setIndexes([]);\n    }\n  }, [form]);\n\n  const handleCreate = () => {\n    const example: Example = {\n      name: form.name,\n      text: form.text, // TODO: choose text or code & equation or url according to mode\n      database: form.database,\n      model: form.model,\n      index: form.index,\n      language: form.language,\n      mode: form.mode,\n    };\n    createExample(example);\n    handleClose();\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n    setForm((oldForm) => ({ ...oldForm, [name]: value }));\n  };\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth=\"sm\"\n      open={isOpen}\n      onClose={handleClose}\n    >\n      <DialogTitle>Create Example</DialogTitle>\n\n      <DialogContent>\n        <Stack component=\"form\" spacing={2}>\n          <TextField\n            label=\"Name\"\n            name=\"name\"\n            variant=\"filled\"\n            fullWidth\n            value={form.name}\n            onChange={handleChange}\n          />\n\n          <TextField\n            label=\"Database\"\n            name=\"database\"\n            variant=\"filled\"\n            fullWidth\n            select\n            SelectProps={{\n              native: true,\n            }}\n            value={form.database}\n            onChange={handleChange}\n          >\n            <option value=\"\" />\n            {dbs.map((db) => <option key={db} value={db}>{db}</option>)}\n          </TextField>\n\n          <TextField\n            label=\"Model\"\n            name=\"model\"\n            variant=\"filled\"\n            fullWidth\n            select\n            SelectProps={{\n              native: true,\n            }}\n            value={form.model}\n            onChange={handleChange}\n          >\n            <option value=\"\" />\n            {models.map((model) => <option key={model} value={model}>{model}</option>)}\n          </TextField>\n\n          <TextField\n            label=\"Indexes\"\n            name=\"index\"\n            variant=\"filled\"\n            fullWidth\n            select\n            SelectProps={{\n              native: true,\n            }}\n            value={form.index}\n            onChange={handleChange}\n          >\n            <option value=\"\" />\n            {indexes.map((idx) => <option key={idx} value={idx}>{idx}</option>)}\n          </TextField>\n\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">Search mode:</FormLabel>\n            <RadioGroup\n              row\n              defaultValue=\"default\"\n              onChange={handleChange}\n              aria-label=\"search mode\"\n              name=\"mode\"\n              sx={{ justifyContent: 'space-evenly' }}\n            >\n              <FormControlLabel value=\"default\" control={<Radio />} label=\"Default\" />\n              <FormControlLabel value=\"separated\" control={<Radio />} label=\"Separated\" />\n              <FormControlLabel value=\"url\" control={<Radio />} label=\"URL\" />\n            </RadioGroup>\n          </FormControl>\n\n          {form.mode === 'default'\n            && (\n              <TextField\n                label=\"Text\"\n                name=\"text\"\n                variant=\"filled\"\n                fullWidth\n                value={form.text}\n                onChange={handleChange}\n              />\n            )}\n\n        </Stack>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose}>Cancel</Button>\n        <Button onClick={handleCreate}>Create</Button>\n      </DialogActions>\n\n    </Dialog>\n  );\n}\n\nfunction ExamplesListDialog(props: ExamplesDialogProps) {\n  const { isOpen, onClose: handleClose } = props;\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth=\"sm\"\n      open={isOpen}\n      onClose={handleClose}\n    >\n      <DialogTitle>Query Examples</DialogTitle>\n      <DialogContent>\n        <ExamplesList onClose={handleClose} />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose}>Cancel</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default function ExamplesDialog() {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [currentDialog, setCurrentDialog] = React.useState<'list' | 'create' | undefined>(undefined);\n\n  const handleOpenListDialog = () => {\n    setCurrentDialog('list');\n    setIsOpen(true);\n  };\n\n  const handleOpenCreateDialog = () => {\n    setCurrentDialog('create');\n    setIsOpen(true);\n  };\n\n  const handleClose = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <>\n      <ButtonGroup\n        sx={{ mr: 2 }}\n        variant=\"outlined\"\n\n      >\n        <Button\n          name=\"list\"\n          onClick={handleOpenListDialog}\n        >\n          Examples\n        </Button>\n        <Button\n          name=\"create\"\n          size=\"small\"\n          onClick={handleOpenCreateDialog}\n        >\n          <AddIcon />\n        </Button>\n      </ButtonGroup>\n      {\n        currentDialog === 'create' && <ExamplesCreateDialog isOpen={isOpen} onClose={handleClose} />\n      }\n      {\n        currentDialog === 'list' && <ExamplesListDialog isOpen={isOpen} onClose={handleClose} />\n      }\n    </>\n  );\n}\n","/* eslint-disable no-useless-escape */\n/* eslint-disable no-shadow */\n/* eslint-disable no-unreachable */\n/* eslint-disable jsx-a11y/control-has-associated-label */\n\nimport {\n  Alert, Box, CircularProgress, Snackbar, Typography,\n} from '@mui/material';\nimport Button from '@mui/material/Button';\nimport Checkbox from '@mui/material/Checkbox';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Divider from '@mui/material/Divider';\nimport FormControl from '@mui/material/FormControl';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormLabel from '@mui/material/FormLabel';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport Stack from '@mui/material/Stack';\nimport Step from '@mui/material/Step';\nimport StepLabel from '@mui/material/StepLabel';\nimport Stepper from '@mui/material/Stepper';\nimport TextField from '@mui/material/TextField';\nimport { green } from '@mui/material/colors';\nimport * as React from 'react';\nimport { useRecoilRefresher_UNSTABLE, useRecoilValue } from 'recoil';\nimport {\n  baseURL,\n  dataStructureQueryState,\n  dbsState,\n} from '../../recoil/selectors';\n\nconst COLBERT_NAME = 'PyterrierColbert';\nconst BM25_NAME = 'PyterrierModel';\nconst CODETRANS_NAME = 'CODETRANS';\nconst PLBART_NAME = 'PLBART';\nconst KEYWORDS_NAME = 'KEYWORDS';\n\ninterface expansionMethods {\n  [CODETRANS_NAME]: boolean;\n  [PLBART_NAME]: boolean;\n  [KEYWORDS_NAME]: boolean;\n}\n\nexport interface IndexRequest {\n  url: string;\n  model: string | null;\n  database: string;\n  index: string;\n  expansionMethods: expansionMethods;\n  neuralIndexingMethod: string | null;\n  collectionAction: 'CREATE' | 'UPDATE' | null;\n  indexingAction: 'CREATE' | 'UPDATE' | null;\n}\n\nexport const emptyIndexRequest: IndexRequest = {\n  url: '',\n  model: null,\n  database: '',\n  index: '',\n  expansionMethods: {\n    [CODETRANS_NAME]: false,\n    [PLBART_NAME]: false,\n    [KEYWORDS_NAME]: false,\n  },\n  neuralIndexingMethod: null,\n  collectionAction: null,\n  indexingAction: null,\n};\n\nexport default function SelfIndexingDialog() {\n  const [activeStep, setActiveStep] = React.useState<number>(0);\n  const [isDialogOpen, setIsDialogOpen] = React.useState(false);\n  const [isSnackbarVisible, setIsSnackbarVisible] = React.useState(false);\n  const [form, setForm] = React.useState<IndexRequest>(emptyIndexRequest);\n  const [indexes, setIndexes] = React.useState<string[]>([]);\n  const databases = useRecoilValue(dbsState);\n  const [loading, setLoading] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const [error, setError] = React.useState(false);\n  const refreshDataStructure = useRecoilRefresher_UNSTABLE(dataStructureQueryState);\n  const dataStructure = useRecoilValue(dataStructureQueryState);\n\n  React.useEffect(() => {\n    if (form.model == null) return;\n\n    // filter indexes\n    if (dataStructure[form.database] && dataStructure[form.database][form.model]) {\n      setIndexes(dataStructure[form.database][form.model]);\n    } else {\n      setIndexes([]);\n    }\n  }, [form.model]);\n\n  const steps = [\n    'Git URL',\n    'Choose Collection',\n    'Choose Model',\n    'Indexing Options',\n    'Confirmation',\n  ];\n\n  const handleOpen = () => {\n    setIsDialogOpen(true);\n  };\n\n  const handleCloseDialog = () => {\n    setIsDialogOpen(false);\n  };\n\n  const handleCloseSnackbar = () => {\n    setIsSnackbarVisible(false);\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n    setForm((oldForm) => ({\n      ...oldForm,\n      [name]: value,\n    }));\n  };\n\n  function extractRepoName(url: string): string {\n    // Split the URL by '/' and get the last part\n    const parts = url.split('/');\n    const lastPart = parts[parts.length - 1];\n\n    // Remove the '.git' extension if present\n    const repoName = lastPart.endsWith('.git') ? lastPart.slice(0, -4) : lastPart;\n\n    return repoName;\n  }\n\n  const handleChangeUrl = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n    const repoName = extractRepoName(value);\n\n    setForm((oldForm) => ({\n      ...oldForm,\n      url: value,\n      database: repoName,\n    }));\n  };\n\n  const handleChangeExpansionmethods = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = event.target;\n\n    setForm((oldForm) => ({\n      ...oldForm,\n      expansionMethods: {\n        ...oldForm.expansionMethods,\n        [name]: checked,\n      },\n    }));\n  };\n\n  const handleChangeCollectionAction = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    if (value === 'CREATE') {\n      setForm((oldForm) => ({ ...oldForm, indexingAction: 'CREATE' }));\n    } else if (value === 'UPDATE') {\n      setForm((oldForm) => ({ ...oldForm, indexingAction: null }));\n    }\n\n    setForm((oldForm) => ({ ...oldForm, [name]: value }));\n  };\n\n  const handleReset = () => {\n    setForm(emptyIndexRequest);\n    setActiveStep(0);\n  };\n\n  const handleFinish = () => {\n    if (!loading) {\n      setSuccess(false);\n      setLoading(true);\n      fetch(`${baseURL}/index`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(form),\n      })\n        .then((response) => response.json())\n        .then(() => {\n          refreshDataStructure();\n          setLoading(false);\n          setSuccess(true);\n          setIsDialogOpen(false);\n          setIsSnackbarVisible(true);\n          handleReset();\n        })\n        .catch(() => {\n          setLoading(false);\n          setSuccess(false);\n          setError(true);\n        });\n    }\n  };\n\n  const totalSteps = () => steps.length;\n\n  const isLastStep = () => activeStep === totalSteps() - 1;\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleNext = () => {\n    if (!isLastStep()) {\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    } else {\n      handleFinish();\n    }\n  };\n\n  const isNextDisabled = () => {\n    switch (activeStep) {\n      case 0: {\n        // Did not find any solution to validate gir urls\n        return false;\n      }\n      case 1: {\n        return form.collectionAction === null || form.database === '';\n      }\n      case 2: {\n        return form.model === '';\n      }\n      case 3: {\n        if (form.expansionMethods === null) return true;\n        return false;\n      }\n      case 4: {\n        return false;\n      }\n      default: {\n        return true;\n      }\n    }\n  };\n\n  const getSelectedExpansionMethods = () => {\n    const selectedExpansionMethods: string[] = [];\n\n    Object.entries(form.expansionMethods).map((entry) => {\n      if (entry[1] as boolean) {\n        selectedExpansionMethods.push(entry[0]);\n      }\n\n      return null;\n    });\n\n    return selectedExpansionMethods.join(', ').replace(/, ([^,]*)$/, ' and $1');\n  };\n\n  const buttonSx = {\n    ...(success && {\n      bgcolor: green[500],\n      '&:hover': {\n        bgcolor: green[700],\n      },\n    }),\n  };\n\n  const FormStep = (step: number) => {\n    switch (step) {\n      case 0: {\n        return (\n          <FormControl>\n            <FormLabel sx={{ mb: 2 }}>\n              Which Git repository do you wish to index?\n            </FormLabel>\n            <TextField\n              label=\"Git Repository Url\"\n              name=\"url\"\n              variant=\"filled\"\n              fullWidth\n              value={form.url}\n              onChange={handleChangeUrl}\n            />\n          </FormControl>\n        );\n      }\n      case 1: {\n        return (\n          <>\n            <FormControl>\n              <FormLabel sx={{ mb: 2 }}>\n                Would you like to create a new collection or update an existing one?\n              </FormLabel>\n              <RadioGroup\n                row\n                name=\"collectionAction\"\n                value={form.collectionAction}\n                onChange={handleChangeCollectionAction}\n              >\n                <FormControlLabel\n                  value=\"CREATE\"\n                  control={<Radio />}\n                  label=\"Create new collection\"\n                />\n                <FormControlLabel\n                  value=\"UPDATE\"\n                  control={<Radio />}\n                  label=\"Update existing collection\"\n                />\n              </RadioGroup>\n            </FormControl>\n\n            {form.collectionAction === 'CREATE' && (\n            <TextField\n              label=\"Name\"\n              name=\"database\"\n              variant=\"filled\"\n              fullWidth\n              value={form.database}\n              onChange={handleChange}\n              helperText=\"Name of new collection\"\n            />\n            )}\n\n            {form.collectionAction === 'UPDATE' && (\n            <TextField\n              label=\"Collection\"\n              name=\"database\"\n              value={form.database}\n              onChange={handleChange}\n              select\n              SelectProps={{\n                native: true,\n              }}\n            >\n              <option disabled value=\"\" />\n              {databases.map((db) => <option key={db} value={db}>{db}</option>)}\n            </TextField>\n            )}\n\n          </>\n        );\n      }\n      case 2: {\n        return (\n          <>\n            {form.collectionAction === 'UPDATE' && (\n              <FormControl>\n                <FormLabel sx={{ mb: 2 }}>\n                  Would you like to create a new index or update an existing one?\n                </FormLabel>\n                <RadioGroup\n                  row\n                  name=\"indexingAction\"\n                  value={form.indexingAction}\n                  onChange={handleChange}\n                >\n                  <FormControlLabel\n                    value=\"CREATE\"\n                    control={<Radio />}\n                    label=\"Create new index\"\n                  />\n                  <FormControlLabel\n                    value=\"UPDATE\"\n                    control={<Radio />}\n                    label=\"Update existing index\"\n                  />\n                </RadioGroup>\n              </FormControl>\n            )}\n\n            {form.indexingAction && (\n            <FormControl>\n              <FormLabel sx={{ mb: 2 }}>\n                Which kind of index would you like to create?\n              </FormLabel>\n              <RadioGroup\n                row\n                name=\"model\"\n                value={form.model}\n                onChange={handleChange}\n              >\n                <FormControlLabel\n                  value={BM25_NAME}\n                  control={<Radio />}\n                  label=\"BM25\"\n                />\n                <FormControlLabel\n                  disabled\n                  value={COLBERT_NAME}\n                  control={<Radio />}\n                  label=\"ColBERT\"\n                />\n              </RadioGroup>\n            </FormControl>\n            )}\n\n            {form.indexingAction === 'CREATE' && (\n            <>\n              <TextField\n                label=\"Name\"\n                name=\"index\"\n                variant=\"filled\"\n                fullWidth\n                value={form.index}\n                onChange={handleChange}\n                helperText=\"Name of new index\"\n                disabled={form.model === null}\n              />\n            </>\n            )}\n\n            {form.indexingAction === 'UPDATE' && (\n            <TextField\n              label=\"Index\"\n              name=\"index\"\n              value={form.index}\n              onChange={handleChange}\n              select\n              SelectProps={{\n                native: true,\n              }}\n            >\n              <option disabled value=\"\" />\n              {indexes.map(\n                (index) => <option key={index} value={index}>{index}</option>,\n              )}\n            </TextField>\n            )}\n          </>\n        );\n      }\n      case 3: {\n        return (\n          <>\n            <FormControl>\n              <FormLabel sx={{ mb: 2 }}>\n                How would you like to expand your documents?\n              </FormLabel>\n              <FormGroup\n                onChange={handleChangeExpansionmethods}\n              >\n                <FormControlLabel\n                  control={(\n                    <Checkbox\n                      checked={form.expansionMethods[CODETRANS_NAME]}\n                      onChange={handleChange}\n                      name={CODETRANS_NAME}\n                    />\n                )}\n                  label=\"CodeTrans\"\n                />\n\n                <FormControlLabel\n                  control={(\n                    <Checkbox\n                      checked={form.expansionMethods[PLBART_NAME]}\n                      onChange={handleChange}\n                      name={PLBART_NAME}\n                    />\n                )}\n                  label=\"PLBART\"\n                />\n\n                <FormControlLabel\n                  disabled\n                  control={(\n                    <Checkbox\n                      checked={form.expansionMethods[KEYWORDS_NAME]}\n                      onChange={handleChange}\n                      name={KEYWORDS_NAME}\n                    />\n                )}\n                  label=\"Keywords\"\n                />\n\n              </FormGroup>\n            </FormControl>\n\n            {\n            form.model === COLBERT_NAME && (\n            <FormControl>\n              <FormLabel>\n                How would you like to index this?\n              </FormLabel>\n              <RadioGroup\n                row\n                name=\"neuralIndexingMethod\"\n                value={form.neuralIndexingMethod}\n                onChange={handleChange}\n              >\n                <FormControlLabel\n                  value=\"APPLIED\"\n                  control={<Radio />}\n                  label=\"Applied\"\n                />\n                <FormControlLabel\n                  value=\"TRAINED\"\n                  control={<Radio />}\n                  label=\"Trained\"\n                />\n              </RadioGroup>\n            </FormControl>\n            )\n          }\n          </>\n        );\n      }\n      case 4: {\n        return (\n          <>\n            {error && <Alert severity=\"error\">Something went wrong. Documents could not be indexed.</Alert>}\n            <Typography variant=\"h5\">\n              Indexing Summary:\n            </Typography>\n\n            <Typography variant=\"h6\">\n              Source:\n            </Typography>\n            <div>\n              <b>Git URL: </b>\n              <span>{form.url}</span>\n            </div>\n\n            <Divider />\n\n            <Typography variant=\"h6\">\n              Collection:\n            </Typography>\n            <div>\n              <b>Action: </b>\n              <span>{form.collectionAction}</span>\n            </div>\n            <div>\n              <b>Name: </b>\n              <span>{form.database}</span>\n            </div>\n\n            <Divider />\n\n            <Typography variant=\"h6\">\n              Index:\n            </Typography>\n            <div>\n              <b>Action: </b>\n              <span>{form.indexingAction}</span>\n            </div>\n            <div>\n              <b>Model: </b>\n              <span>{form.model}</span>\n            </div>\n            <div>\n              <b>Name: </b>\n              <span>{form.index}</span>\n            </div>\n\n            <Divider />\n\n            <Typography variant=\"h6\">\n              Document Expansion:\n            </Typography>\n            <div>\n              <b>Methods: </b>\n              <span>{getSelectedExpansionMethods()}</span>\n            </div>\n\n          </>\n        );\n      }\n      default: {\n        throw new Error('invalid step');\n      }\n    }\n  };\n\n  return (\n    <>\n      <Button\n        variant=\"contained\"\n        name=\"list\"\n        onClick={handleOpen}\n      >\n        Index repo\n      </Button>\n\n      <Dialog\n        open={isDialogOpen}\n        onClose={handleCloseDialog}\n        PaperProps={{\n          sx: {\n            width: '50%',\n            minHeight: 480,\n          },\n        }}\n      >\n        <DialogTitle>Add Code Base</DialogTitle>\n\n        <DialogContent>\n          <Stack component=\"form\" spacing={2}>\n            <Stepper activeStep={activeStep} alternativeLabel>\n              {steps.map((label) => (\n                <Step key={label}>\n                  <StepLabel>{label}</StepLabel>\n                </Step>\n              ))}\n            </Stepper>\n            {FormStep(activeStep)}\n          </Stack>\n        </DialogContent>\n        <DialogActions>\n          {activeStep === steps.length ? (\n            <Button onClick={handleReset}>Reset</Button>\n          ) : (\n            <>\n              <Button\n                color=\"inherit\"\n                disabled={activeStep === 0}\n                onClick={handleBack}\n                sx={{ mr: 1 }}\n              >\n                Back\n              </Button>\n\n              {activeStep === steps.length - 1 ? (\n                <Box sx={{ m: 1, position: 'relative' }}>\n                  <Button\n                    variant=\"contained\"\n                    sx={buttonSx}\n                    disabled={loading}\n                    onClick={handleFinish}\n                  >\n                    Submit\n                  </Button>\n                  {loading && (\n                  <CircularProgress\n                    size={24}\n                    sx={{\n                      color: green[500],\n                      position: 'absolute',\n                      top: '50%',\n                      left: '50%',\n                      marginTop: '-12px',\n                      marginLeft: '-12px',\n                    }}\n                  />\n                  )}\n                </Box>\n              ) : (\n                <Button onClick={handleNext} disabled={isNextDisabled()}>\n                  Next\n                </Button>\n              )}\n            </>\n          )}\n        </DialogActions>\n\n      </Dialog>\n\n      <Snackbar open={isSnackbarVisible} autoHideDuration={600} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\n        <Alert onClose={handleCloseSnackbar} severity=\"success\" sx={{ width: '100%' }}>\n          Documents successfully indexed\n        </Alert>\n      </Snackbar>\n    </>\n  );\n}\n","import AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Toolbar from '@mui/material/Toolbar';\nimport React from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { useRecoilValue } from 'recoil';\n// import { useTheme } from '@mui/material/styles';\nimport ExamplesDialog from '../features/examples/ExamplesDialog';\nimport SystemSettings from '../features/navbar/SystemSettings';\nimport SelfIndexingDialog from '../features/selfIndexing/SelfIndexingDialog';\nimport { configsState } from '../recoil/selectors';\n\nexport default function MainLayout() {\n  // const theme = useTheme();\n  const configs = useRecoilValue(configsState);\n\n  const { allowed_search_modes } = configs;\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        justifyContent: 'center',\n        height: '100vh',\n        bgcolor: 'background.paper',\n      }}\n    >\n      <AppBar\n        position=\"fixed\"\n        elevation={0}\n        sx={{ bgcolor: 'background.paper' }}\n      >\n        <Toolbar>\n          {Object.entries(allowed_search_modes).map(([mode, isAllowed]) => (\n            <Button\n              disabled={!isAllowed}\n              key={mode}\n              sx={{\n                color: 'text.primary',\n              }}\n              href={mode}\n            >\n              {mode}\n            </Button>\n          ))}\n\n          <Box sx={{ flexGrow: 1 }} />\n\n          <ExamplesDialog />\n\n          <SelfIndexingDialog />\n\n          <SystemSettings />\n\n        </Toolbar>\n      </AppBar>\n\n      <main\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          marginBottom: '64px',\n          minWidth: '80%',\n          alignItems: 'center',\n        }}\n      >\n        <Outlet />\n      </main>\n    </Box>\n  );\n}\n","import React from 'react';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport TextField from '@mui/material/TextField';\nimport { useRecoilState } from 'recoil';\nimport { queryState } from './recoil/atoms';\n\nexport default function SeparatedSearchPage() {\n  const [query, setQuery] = useRecoilState(queryState);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = event.target;\n    setQuery({ ...query, [name]: value });\n  };\n\n  const handleSearch = () => {\n    console.error('TODO');\n  };\n\n  return (\n    <Stack spacing={2}>\n      <TextField\n        sx={{ width: '400px' }}\n        value={query.code}\n        id=\"filled-basic\"\n        label=\"Code\"\n        variant=\"filled\"\n        onChange={handleChange}\n      />\n\n      <TextField\n        sx={{ width: '400px' }}\n        value={query.equation}\n        id=\"filled-basic\"\n        label=\"Equations\"\n        variant=\"filled\"\n        onChange={handleChange}\n      />\n\n      <Button variant=\"contained\" onClick={handleSearch}>Search</Button>\n    </Stack>\n\n  );\n}\n","import React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\n\nexport default function URLSearchPage() {\n  return (\n    <Box sx={{ textAlign: 'center' }}>\n      <TextField\n        placeholder=\"Enter ID or URL\"\n      />\n    </Box>\n  );\n}\n","import React from 'react';\nimport { MathJaxContext } from 'better-react-mathjax';\nimport { RecoilRoot } from 'recoil';\nimport RecoilizeDebugger from 'recoilize';\nimport { Routes, Route } from 'react-router-dom';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport ResultsPage from './ResultsPage';\nimport HomePage from './HomePage';\nimport MainLayout from './layouts/MainLayout';\nimport { ColorModeContext } from './ColorModeContext';\nimport SeparatedSearchPage from './SeparatedSearchPage';\nimport URLSearchPage from './URLSearchPage';\n\nconst mathJaxConfig = {\n  loader: { load: ['[tex]/html'] },\n  tex: {\n    packages: { '[+]': ['html'] },\n    inlineMath: [\n      ['$', '$'],\n      ['\\\\(', '\\\\)'],\n    ],\n    displayMath: [\n      ['$$', '$$'],\n      ['\\\\[', '\\\\]'],\n    ],\n  },\n};\n\n// export const gruvbox = {\n//   palette: {\n//     mode: 'dark',\n//     primary: {\n//       main: '#d79921',\n//     },\n//     secondary: {\n//       main: '#458588',\n//     },\n//     background: {\n//       default: '#282828',\n//       paper: '#3c3836',\n//     },\n//     error: {\n//       main: '#fb4934',\n//     },\n//     warning: {\n//       main: '#fabd2f',\n//     },\n//     info: {\n//       main: '#83a598',\n//     },\n//     success: {\n//       main: '#b8bb26',\n//     },\n//   },\n// };\n\n// const theme = createTheme({\n//   palette: {\n//     mode: 'dark',\n//     primary: {\n//       main: '#bd93f9',\n//     },\n//     secondary: {\n//       main: '#ff79c6',\n//     },\n//     background: {\n//       default: '#44475a',\n//       paper: '#282a36',\n//     },\n//     error: {\n//       main: '#ff5555',\n//     },\n//     warning: {\n//       main: '#ffb86c',\n//     },\n//     success: {\n//       main: '#50fa7b',\n//     },\n//     info: {\n//       main: '#8be9fd',\n//     },\n//     divider: '#8be9fd',\n//   },\n// });\n\nfunction Fallback() {\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        justifyContent: 'center',\n        height: '100vh',\n        bgcolor: 'background.paper',\n      }}\n    >\n\n      <main\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          marginBottom: '64px',\n          minWidth: '80%',\n          alignItems: 'center',\n        }}\n      >\n        <CircularProgress />\n      </main>\n    </Box>\n  );\n}\n\nexport default function App() {\n  const [mode, setMode] = React.useState<'light' | 'dark'>('dark');\n\n  const colorMode = React.useMemo(\n    () => ({\n      toggleColorMode: () => {\n        setMode((prevMode) => {\n          const newMode = prevMode === 'light' ? 'dark' : 'light';\n          localStorage.setItem('darkState', newMode);\n          return newMode;\n        });\n      },\n    }),\n    [],\n  );\n\n  const theme = React.useMemo(\n    () => createTheme({\n      palette: {\n        mode,\n        // primary: {\n        //   main: '#bd93f9',\n        // },\n        // secondary: {\n        //   main: '#ff79c6',\n        // },\n        // background: {\n        //   default: '#44475a',\n        //   paper: '#282a36',\n        // },\n        // error: {\n        //   main: '#ff5555',\n        // },\n        // warning: {\n        //   main: '#ffb86c',\n        // },\n        // success: {\n        //   main: '#50fa7b',\n        // },\n        // info: {\n        //   main: '#8be9fd',\n        // },\n        // divider: '#8be9fd',\n      },\n    }),\n    [mode],\n  );\n\n  React.useEffect(() => {\n    const existingPreference = localStorage.getItem('darkState');\n    if (existingPreference && existingPreference === 'light') {\n      colorMode.toggleColorMode();\n      localStorage.setItem('darkState', 'light');\n    } else {\n      localStorage.setItem('darkState', 'dark');\n    }\n  }, []);\n\n  return (\n    <RecoilRoot>\n      <RecoilizeDebugger />\n      <ColorModeContext.Provider value={colorMode}>\n        <ThemeProvider theme={theme}>\n          <React.Suspense fallback={<Fallback />}>\n            <MathJaxContext config={mathJaxConfig}>\n              <Routes>\n                <Route element={<MainLayout />}>\n                  <Route path=\"/\" element={<HomePage />} />\n                  <Route path=\"default\" element={<HomePage />} />\n                  <Route path=\"separated\" element={<SeparatedSearchPage />} />\n                  <Route path=\"url\" element={<URLSearchPage />} />\n                </Route>\n                <Route path=\"results\" element={<ResultsPage />} />\n              </Routes>\n            </MathJaxContext>\n          </React.Suspense>\n        </ThemeProvider>\n      </ColorModeContext.Provider>\n    </RecoilRoot>\n  );\n}\n","/* eslint-disable no-console */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  // eslint-disable-next-line no-unused-vars\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  // eslint-disable-next-line no-unused-vars\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}